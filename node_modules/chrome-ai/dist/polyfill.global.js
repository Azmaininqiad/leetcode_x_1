"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __defProps = Object.defineProperties;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __spreadValues = (a2, b2) => {
    for (var prop in b2 || (b2 = {}))
      if (__hasOwnProp.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b2)) {
        if (__propIsEnum.call(b2, prop))
          __defNormalProp(a2, prop, b2[prop]);
      }
    return a2;
  };
  var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
  var __require = /* @__PURE__ */ ((x2) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x2, {
    get: (a2, b2) => (typeof require !== "undefined" ? require : a2)[b2]
  }) : x2)(function(x2) {
    if (typeof require !== "undefined") return require.apply(this, arguments);
    throw Error('Dynamic require of "' + x2 + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __async = (__this, __arguments, generator) => {
    return new Promise((resolve, reject) => {
      var fulfilled = (value) => {
        try {
          step(generator.next(value));
        } catch (e2) {
          reject(e2);
        }
      };
      var rejected = (value) => {
        try {
          step(generator.throw(value));
        } catch (e2) {
          reject(e2);
        }
      };
      var step = (x2) => x2.done ? resolve(x2.value) : Promise.resolve(x2.value).then(fulfilled, rejected);
      step((generator = generator.apply(__this, __arguments)).next());
    });
  };

  // node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js
  var require_ms = __commonJS({
    "node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js"(exports, module) {
      "use strict";
      var s2 = 1e3;
      var m2 = s2 * 60;
      var h2 = m2 * 60;
      var d2 = h2 * 24;
      var w2 = d2 * 7;
      var y2 = d2 * 365.25;
      module.exports = function(val, options) {
        options = options || {};
        var type = typeof val;
        if (type === "string" && val.length > 0) {
          return parse(val);
        } else if (type === "number" && isFinite(val)) {
          return options.long ? fmtLong(val) : fmtShort(val);
        }
        throw new Error(
          "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
        );
      };
      function parse(str) {
        str = String(str);
        if (str.length > 100) {
          return;
        }
        var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
          str
        );
        if (!match) {
          return;
        }
        var n2 = parseFloat(match[1]);
        var type = (match[2] || "ms").toLowerCase();
        switch (type) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return n2 * y2;
          case "weeks":
          case "week":
          case "w":
            return n2 * w2;
          case "days":
          case "day":
          case "d":
            return n2 * d2;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return n2 * h2;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return n2 * m2;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return n2 * s2;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return n2;
          default:
            return void 0;
        }
      }
      function fmtShort(ms) {
        var msAbs = Math.abs(ms);
        if (msAbs >= d2) {
          return Math.round(ms / d2) + "d";
        }
        if (msAbs >= h2) {
          return Math.round(ms / h2) + "h";
        }
        if (msAbs >= m2) {
          return Math.round(ms / m2) + "m";
        }
        if (msAbs >= s2) {
          return Math.round(ms / s2) + "s";
        }
        return ms + "ms";
      }
      function fmtLong(ms) {
        var msAbs = Math.abs(ms);
        if (msAbs >= d2) {
          return plural(ms, msAbs, d2, "day");
        }
        if (msAbs >= h2) {
          return plural(ms, msAbs, h2, "hour");
        }
        if (msAbs >= m2) {
          return plural(ms, msAbs, m2, "minute");
        }
        if (msAbs >= s2) {
          return plural(ms, msAbs, s2, "second");
        }
        return ms + " ms";
      }
      function plural(ms, msAbs, n2, name) {
        var isPlural = msAbs >= n2 * 1.5;
        return Math.round(ms / n2) + " " + name + (isPlural ? "s" : "");
      }
    }
  });

  // node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/common.js
  var require_common = __commonJS({
    "node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/common.js"(exports, module) {
      "use strict";
      function setup(env) {
        createDebug2.debug = createDebug2;
        createDebug2.default = createDebug2;
        createDebug2.coerce = coerce;
        createDebug2.disable = disable;
        createDebug2.enable = enable;
        createDebug2.enabled = enabled;
        createDebug2.humanize = require_ms();
        createDebug2.destroy = destroy;
        Object.keys(env).forEach((key) => {
          createDebug2[key] = env[key];
        });
        createDebug2.names = [];
        createDebug2.skips = [];
        createDebug2.formatters = {};
        function selectColor(namespace) {
          let hash = 0;
          for (let i2 = 0; i2 < namespace.length; i2++) {
            hash = (hash << 5) - hash + namespace.charCodeAt(i2);
            hash |= 0;
          }
          return createDebug2.colors[Math.abs(hash) % createDebug2.colors.length];
        }
        createDebug2.selectColor = selectColor;
        function createDebug2(namespace) {
          let prevTime;
          let enableOverride = null;
          let namespacesCache;
          let enabledCache;
          function debug2(...args) {
            if (!debug2.enabled) {
              return;
            }
            const self2 = debug2;
            const curr = Number(/* @__PURE__ */ new Date());
            const ms = curr - (prevTime || curr);
            self2.diff = ms;
            self2.prev = prevTime;
            self2.curr = curr;
            prevTime = curr;
            args[0] = createDebug2.coerce(args[0]);
            if (typeof args[0] !== "string") {
              args.unshift("%O");
            }
            let index = 0;
            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
              if (match === "%%") {
                return "%";
              }
              index++;
              const formatter = createDebug2.formatters[format];
              if (typeof formatter === "function") {
                const val = args[index];
                match = formatter.call(self2, val);
                args.splice(index, 1);
                index--;
              }
              return match;
            });
            createDebug2.formatArgs.call(self2, args);
            const logFn = self2.log || createDebug2.log;
            logFn.apply(self2, args);
          }
          debug2.namespace = namespace;
          debug2.useColors = createDebug2.useColors();
          debug2.color = createDebug2.selectColor(namespace);
          debug2.extend = extend;
          debug2.destroy = createDebug2.destroy;
          Object.defineProperty(debug2, "enabled", {
            enumerable: true,
            configurable: false,
            get: () => {
              if (enableOverride !== null) {
                return enableOverride;
              }
              if (namespacesCache !== createDebug2.namespaces) {
                namespacesCache = createDebug2.namespaces;
                enabledCache = createDebug2.enabled(namespace);
              }
              return enabledCache;
            },
            set: (v2) => {
              enableOverride = v2;
            }
          });
          if (typeof createDebug2.init === "function") {
            createDebug2.init(debug2);
          }
          return debug2;
        }
        function extend(namespace, delimiter) {
          const newDebug = createDebug2(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
          newDebug.log = this.log;
          return newDebug;
        }
        function enable(namespaces) {
          createDebug2.save(namespaces);
          createDebug2.namespaces = namespaces;
          createDebug2.names = [];
          createDebug2.skips = [];
          let i2;
          const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
          const len = split.length;
          for (i2 = 0; i2 < len; i2++) {
            if (!split[i2]) {
              continue;
            }
            namespaces = split[i2].replace(/\*/g, ".*?");
            if (namespaces[0] === "-") {
              createDebug2.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
            } else {
              createDebug2.names.push(new RegExp("^" + namespaces + "$"));
            }
          }
        }
        function disable() {
          const namespaces = [
            ...createDebug2.names.map(toNamespace),
            ...createDebug2.skips.map(toNamespace).map((namespace) => "-" + namespace)
          ].join(",");
          createDebug2.enable("");
          return namespaces;
        }
        function enabled(name) {
          if (name[name.length - 1] === "*") {
            return true;
          }
          let i2;
          let len;
          for (i2 = 0, len = createDebug2.skips.length; i2 < len; i2++) {
            if (createDebug2.skips[i2].test(name)) {
              return false;
            }
          }
          for (i2 = 0, len = createDebug2.names.length; i2 < len; i2++) {
            if (createDebug2.names[i2].test(name)) {
              return true;
            }
          }
          return false;
        }
        function toNamespace(regexp) {
          return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
        }
        function coerce(val) {
          if (val instanceof Error) {
            return val.stack || val.message;
          }
          return val;
        }
        function destroy() {
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
        createDebug2.enable(createDebug2.load());
        return createDebug2;
      }
      module.exports = setup;
    }
  });

  // node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/browser.js
  var require_browser = __commonJS({
    "node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/browser.js"(exports, module) {
      "use strict";
      exports.formatArgs = formatArgs;
      exports.save = save;
      exports.load = load;
      exports.useColors = useColors;
      exports.storage = localstorage();
      exports.destroy = /* @__PURE__ */ (() => {
        let warned = false;
        return () => {
          if (!warned) {
            warned = true;
            console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
          }
        };
      })();
      exports.colors = [
        "#0000CC",
        "#0000FF",
        "#0033CC",
        "#0033FF",
        "#0066CC",
        "#0066FF",
        "#0099CC",
        "#0099FF",
        "#00CC00",
        "#00CC33",
        "#00CC66",
        "#00CC99",
        "#00CCCC",
        "#00CCFF",
        "#3300CC",
        "#3300FF",
        "#3333CC",
        "#3333FF",
        "#3366CC",
        "#3366FF",
        "#3399CC",
        "#3399FF",
        "#33CC00",
        "#33CC33",
        "#33CC66",
        "#33CC99",
        "#33CCCC",
        "#33CCFF",
        "#6600CC",
        "#6600FF",
        "#6633CC",
        "#6633FF",
        "#66CC00",
        "#66CC33",
        "#9900CC",
        "#9900FF",
        "#9933CC",
        "#9933FF",
        "#99CC00",
        "#99CC33",
        "#CC0000",
        "#CC0033",
        "#CC0066",
        "#CC0099",
        "#CC00CC",
        "#CC00FF",
        "#CC3300",
        "#CC3333",
        "#CC3366",
        "#CC3399",
        "#CC33CC",
        "#CC33FF",
        "#CC6600",
        "#CC6633",
        "#CC9900",
        "#CC9933",
        "#CCCC00",
        "#CCCC33",
        "#FF0000",
        "#FF0033",
        "#FF0066",
        "#FF0099",
        "#FF00CC",
        "#FF00FF",
        "#FF3300",
        "#FF3333",
        "#FF3366",
        "#FF3399",
        "#FF33CC",
        "#FF33FF",
        "#FF6600",
        "#FF6633",
        "#FF9900",
        "#FF9933",
        "#FFCC00",
        "#FFCC33"
      ];
      function useColors() {
        if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
          return true;
        }
        if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
          return false;
        }
        let m2;
        return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
        typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
        typeof navigator !== "undefined" && navigator.userAgent && (m2 = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m2[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
        typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
      }
      function formatArgs(args) {
        args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module.exports.humanize(this.diff);
        if (!this.useColors) {
          return;
        }
        const c2 = "color: " + this.color;
        args.splice(1, 0, c2, "color: inherit");
        let index = 0;
        let lastC = 0;
        args[0].replace(/%[a-zA-Z%]/g, (match) => {
          if (match === "%%") {
            return;
          }
          index++;
          if (match === "%c") {
            lastC = index;
          }
        });
        args.splice(lastC, 0, c2);
      }
      exports.log = console.debug || console.log || (() => {
      });
      function save(namespaces) {
        try {
          if (namespaces) {
            exports.storage.setItem("debug", namespaces);
          } else {
            exports.storage.removeItem("debug");
          }
        } catch (error) {
        }
      }
      function load() {
        let r2;
        try {
          r2 = exports.storage.getItem("debug");
        } catch (error) {
        }
        if (!r2 && typeof process !== "undefined" && "env" in process) {
          r2 = process.env.DEBUG;
        }
        return r2;
      }
      function localstorage() {
        try {
          return localStorage;
        } catch (error) {
        }
      }
      module.exports = require_common()(exports);
      var { formatters } = module.exports;
      formatters.j = function(v2) {
        try {
          return JSON.stringify(v2);
        } catch (error) {
          return "[UnexpectedJSONParseError]: " + error.message;
        }
      };
    }
  });

  // node_modules/.pnpm/has-flag@3.0.0/node_modules/has-flag/index.js
  var require_has_flag = __commonJS({
    "node_modules/.pnpm/has-flag@3.0.0/node_modules/has-flag/index.js"(exports, module) {
      "use strict";
      module.exports = (flag, argv) => {
        argv = argv || process.argv;
        const prefix = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
        const pos = argv.indexOf(prefix + flag);
        const terminatorPos = argv.indexOf("--");
        return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
      };
    }
  });

  // node_modules/.pnpm/supports-color@5.5.0/node_modules/supports-color/index.js
  var require_supports_color = __commonJS({
    "node_modules/.pnpm/supports-color@5.5.0/node_modules/supports-color/index.js"(exports, module) {
      "use strict";
      var os = __require("os");
      var hasFlag = require_has_flag();
      var env = process.env;
      var forceColor;
      if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false")) {
        forceColor = false;
      } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
        forceColor = true;
      }
      if ("FORCE_COLOR" in env) {
        forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
      }
      function translateLevel(level) {
        if (level === 0) {
          return false;
        }
        return {
          level,
          hasBasic: true,
          has256: level >= 2,
          has16m: level >= 3
        };
      }
      function supportsColor(stream) {
        if (forceColor === false) {
          return 0;
        }
        if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
          return 3;
        }
        if (hasFlag("color=256")) {
          return 2;
        }
        if (stream && !stream.isTTY && forceColor !== true) {
          return 0;
        }
        const min = forceColor ? 1 : 0;
        if (process.platform === "win32") {
          const osRelease = os.release().split(".");
          if (Number(process.versions.node.split(".")[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
            return Number(osRelease[2]) >= 14931 ? 3 : 2;
          }
          return 1;
        }
        if ("CI" in env) {
          if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
            return 1;
          }
          return min;
        }
        if ("TEAMCITY_VERSION" in env) {
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
        }
        if (env.COLORTERM === "truecolor") {
          return 3;
        }
        if ("TERM_PROGRAM" in env) {
          const version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
          switch (env.TERM_PROGRAM) {
            case "iTerm.app":
              return version >= 3 ? 3 : 2;
            case "Apple_Terminal":
              return 2;
          }
        }
        if (/-256(color)?$/i.test(env.TERM)) {
          return 2;
        }
        if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
          return 1;
        }
        if ("COLORTERM" in env) {
          return 1;
        }
        if (env.TERM === "dumb") {
          return min;
        }
        return min;
      }
      function getSupportLevel(stream) {
        const level = supportsColor(stream);
        return translateLevel(level);
      }
      module.exports = {
        supportsColor: getSupportLevel,
        stdout: getSupportLevel(process.stdout),
        stderr: getSupportLevel(process.stderr)
      };
    }
  });

  // node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/node.js
  var require_node = __commonJS({
    "node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/node.js"(exports, module) {
      "use strict";
      var tty = __require("tty");
      var util = __require("util");
      exports.init = init;
      exports.log = log;
      exports.formatArgs = formatArgs;
      exports.save = save;
      exports.load = load;
      exports.useColors = useColors;
      exports.destroy = util.deprecate(
        () => {
        },
        "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
      );
      exports.colors = [6, 2, 3, 4, 5, 1];
      try {
        const supportsColor = require_supports_color();
        if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
          exports.colors = [
            20,
            21,
            26,
            27,
            32,
            33,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            56,
            57,
            62,
            63,
            68,
            69,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            92,
            93,
            98,
            99,
            112,
            113,
            128,
            129,
            134,
            135,
            148,
            149,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            178,
            179,
            184,
            185,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            214,
            215,
            220,
            221
          ];
        }
      } catch (error) {
      }
      exports.inspectOpts = Object.keys(process.env).filter((key) => {
        return /^debug_/i.test(key);
      }).reduce((obj, key) => {
        const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_2, k2) => {
          return k2.toUpperCase();
        });
        let val = process.env[key];
        if (/^(yes|on|true|enabled)$/i.test(val)) {
          val = true;
        } else if (/^(no|off|false|disabled)$/i.test(val)) {
          val = false;
        } else if (val === "null") {
          val = null;
        } else {
          val = Number(val);
        }
        obj[prop] = val;
        return obj;
      }, {});
      function useColors() {
        return "colors" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
      }
      function formatArgs(args) {
        const { namespace: name, useColors: useColors2 } = this;
        if (useColors2) {
          const c2 = this.color;
          const colorCode = "\x1B[3" + (c2 < 8 ? c2 : "8;5;" + c2);
          const prefix = `  ${colorCode};1m${name} \x1B[0m`;
          args[0] = prefix + args[0].split("\n").join("\n" + prefix);
          args.push(colorCode + "m+" + module.exports.humanize(this.diff) + "\x1B[0m");
        } else {
          args[0] = getDate() + name + " " + args[0];
        }
      }
      function getDate() {
        if (exports.inspectOpts.hideDate) {
          return "";
        }
        return (/* @__PURE__ */ new Date()).toISOString() + " ";
      }
      function log(...args) {
        return process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + "\n");
      }
      function save(namespaces) {
        if (namespaces) {
          process.env.DEBUG = namespaces;
        } else {
          delete process.env.DEBUG;
        }
      }
      function load() {
        return process.env.DEBUG;
      }
      function init(debug2) {
        debug2.inspectOpts = {};
        const keys = Object.keys(exports.inspectOpts);
        for (let i2 = 0; i2 < keys.length; i2++) {
          debug2.inspectOpts[keys[i2]] = exports.inspectOpts[keys[i2]];
        }
      }
      module.exports = require_common()(exports);
      var { formatters } = module.exports;
      formatters.o = function(v2) {
        this.inspectOpts.colors = this.useColors;
        return util.inspect(v2, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
      };
      formatters.O = function(v2) {
        this.inspectOpts.colors = this.useColors;
        return util.inspect(v2, this.inspectOpts);
      };
    }
  });

  // node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/index.js
  var require_src = __commonJS({
    "node_modules/.pnpm/debug@4.3.6/node_modules/debug/src/index.js"(exports, module) {
      "use strict";
      if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
        module.exports = require_browser();
      } else {
        module.exports = require_node();
      }
    }
  });

  // node_modules/.pnpm/@mediapipe+tasks-genai@0.10.14/node_modules/@mediapipe/tasks-genai/genai_bundle.mjs
  var t = "undefined" != typeof self ? self : {};
  function e(e2) {
    t: {
      for (var r2 = ["CLOSURE_FLAGS"], n2 = t, i2 = 0; i2 < r2.length; i2++) if (null == (n2 = n2[r2[i2]])) {
        r2 = null;
        break t;
      }
      r2 = n2;
    }
    return null != (e2 = r2 && r2[e2]) && e2;
  }
  var r;
  var n = "undefined" != typeof TextEncoder;
  function i(t2) {
    if (n) t2 = (r || (r = new TextEncoder())).encode(t2);
    else {
      let r2 = 0;
      const n2 = new Uint8Array(3 * t2.length);
      for (let i2 = 0; i2 < t2.length; i2++) {
        var e2 = t2.charCodeAt(i2);
        if (128 > e2) n2[r2++] = e2;
        else {
          if (2048 > e2) n2[r2++] = e2 >> 6 | 192;
          else {
            if (55296 <= e2 && 57343 >= e2) {
              if (56319 >= e2 && i2 < t2.length) {
                const o2 = t2.charCodeAt(++i2);
                if (56320 <= o2 && 57343 >= o2) {
                  e2 = 1024 * (e2 - 55296) + o2 - 56320 + 65536, n2[r2++] = e2 >> 18 | 240, n2[r2++] = e2 >> 12 & 63 | 128, n2[r2++] = e2 >> 6 & 63 | 128, n2[r2++] = 63 & e2 | 128;
                  continue;
                }
                i2--;
              }
              e2 = 65533;
            }
            n2[r2++] = e2 >> 12 | 224, n2[r2++] = e2 >> 6 & 63 | 128;
          }
          n2[r2++] = 63 & e2 | 128;
        }
      }
      t2 = r2 === n2.length ? n2 : n2.subarray(0, r2);
    }
    return t2;
  }
  var o;
  var s = e(610401301);
  var a = e(188588736);
  var u = t.navigator;
  function c(t2) {
    return !!s && (!!o && o.brands.some(({ brand: e2 }) => e2 && -1 != e2.indexOf(t2)));
  }
  function l(e2) {
    var r2;
    return (r2 = t.navigator) && (r2 = r2.userAgent) || (r2 = ""), -1 != r2.indexOf(e2);
  }
  function h() {
    return !!s && (!!o && 0 < o.brands.length);
  }
  function f() {
    return h() ? c("Chromium") : (l("Chrome") || l("CriOS")) && !(!h() && l("Edge")) || l("Silk");
  }
  o = u && u.userAgentData || null;
  var d = !h() && (l("Trident") || l("MSIE"));
  !l("Android") || f(), f(), l("Safari") && (f() || !h() && l("Coast") || !h() && l("Opera") || !h() && l("Edge") || (h() ? c("Microsoft Edge") : l("Edg/")) || h() && c("Opera"));
  var p = {};
  var g = null;
  function m(t2) {
    var e2 = t2.length, r2 = 3 * e2 / 4;
    r2 % 3 ? r2 = Math.floor(r2) : -1 != "=.".indexOf(t2[e2 - 1]) && (r2 = -1 != "=.".indexOf(t2[e2 - 2]) ? r2 - 2 : r2 - 1);
    var n2 = new Uint8Array(r2), i2 = 0;
    return function(t3, e3) {
      function r3(e4) {
        for (; n3 < t3.length; ) {
          var r4 = t3.charAt(n3++), i4 = g[r4];
          if (null != i4) return i4;
          if (!/^[\s\xa0]*$/.test(r4)) throw Error("Unknown base64 encoding at char: " + r4);
        }
        return e4;
      }
      _();
      for (var n3 = 0; ; ) {
        var i3 = r3(-1), o2 = r3(0), s2 = r3(64), a2 = r3(64);
        if (64 === a2 && -1 === i3) break;
        e3(i3 << 2 | o2 >> 4), 64 != s2 && (e3(o2 << 4 & 240 | s2 >> 2), 64 != a2 && e3(s2 << 6 & 192 | a2));
      }
    }(t2, function(t3) {
      n2[i2++] = t3;
    }), i2 !== r2 ? n2.subarray(0, i2) : n2;
  }
  function _() {
    if (!g) {
      g = {};
      for (var t2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""), e2 = ["+/=", "+/", "-_=", "-_.", "-_"], r2 = 0; 5 > r2; r2++) {
        var n2 = t2.concat(e2[r2].split(""));
        p[r2] = n2;
        for (var i2 = 0; i2 < n2.length; i2++) {
          var o2 = n2[i2];
          void 0 === g[o2] && (g[o2] = i2);
        }
      }
    }
  }
  var v = "undefined" != typeof Uint8Array;
  var y = !d && "function" == typeof btoa;
  function b(t2) {
    if (!y) {
      var e2;
      void 0 === e2 && (e2 = 0), _(), e2 = p[e2];
      var r2 = Array(Math.floor(t2.length / 3)), n2 = e2[64] || "";
      let u2 = 0, c2 = 0;
      for (; u2 < t2.length - 2; u2 += 3) {
        var i2 = t2[u2], o2 = t2[u2 + 1], s2 = t2[u2 + 2], a2 = e2[i2 >> 2];
        i2 = e2[(3 & i2) << 4 | o2 >> 4], o2 = e2[(15 & o2) << 2 | s2 >> 6], s2 = e2[63 & s2], r2[c2++] = a2 + i2 + o2 + s2;
      }
      switch (a2 = 0, s2 = n2, t2.length - u2) {
        case 2:
          s2 = e2[(15 & (a2 = t2[u2 + 1])) << 2] || n2;
        case 1:
          t2 = t2[u2], r2[c2] = e2[t2 >> 2] + e2[(3 & t2) << 4 | a2 >> 4] + s2 + n2;
      }
      return r2.join("");
    }
    for (e2 = "", r2 = 0, n2 = t2.length - 10240; r2 < n2; ) e2 += String.fromCharCode.apply(null, t2.subarray(r2, r2 += 10240));
    return e2 += String.fromCharCode.apply(null, r2 ? t2.subarray(r2) : t2), btoa(e2);
  }
  var w = /[-_.]/g;
  var S = { "-": "+", _: "/", ".": "=" };
  function A(t2) {
    return S[t2] || "";
  }
  function T(t2) {
    if (!y) return m(t2);
    w.test(t2) && (t2 = t2.replace(w, A)), t2 = atob(t2);
    const e2 = new Uint8Array(t2.length);
    for (let r2 = 0; r2 < t2.length; r2++) e2[r2] = t2.charCodeAt(r2);
    return e2;
  }
  function E(t2) {
    return v && null != t2 && t2 instanceof Uint8Array;
  }
  var I;
  var P = {};
  var O;
  function L(t2) {
    if (t2 !== P) throw Error("illegal external caller");
  }
  function U() {
    return O || (O = new x(null, P));
  }
  var x = class {
    constructor(t2, e2) {
      if (L(e2), this.i = t2, null != t2 && 0 === t2.length) throw Error("ByteString should be constructed with non-empty values");
    }
  };
  function k(t2) {
    if ("string" == typeof t2) return { buffer: T(t2), v: false };
    if (Array.isArray(t2)) return { buffer: new Uint8Array(t2), v: false };
    if (t2.constructor === Uint8Array) return { buffer: t2, v: false };
    if (t2.constructor === ArrayBuffer) return { buffer: new Uint8Array(t2), v: false };
    if (t2.constructor === x) {
      L(P);
      var e2 = t2.i;
      return { buffer: (null == (e2 = null == e2 || E(e2) ? e2 : "string" == typeof e2 ? T(e2) : null) ? e2 : t2.i = e2) || (I || (I = new Uint8Array(0))), v: true };
    }
    if (t2 instanceof Uint8Array) return { buffer: new Uint8Array(t2.buffer, t2.byteOffset, t2.byteLength), v: false };
    throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers");
  }
  function B() {
    return "function" == typeof BigInt;
  }
  var N;
  var D = 0;
  var j = 0;
  function F(t2) {
    const e2 = 0 > t2;
    let r2 = (t2 = Math.abs(t2)) >>> 0;
    if (t2 = Math.floor((t2 - r2) / 4294967296), e2) {
      const [e3, n2] = G(r2, t2);
      t2 = n2, r2 = e3;
    }
    D = r2 >>> 0, j = t2 >>> 0;
  }
  function V(t2, e2) {
    if (t2 >>>= 0, 2097151 >= (e2 >>>= 0)) var r2 = "" + (4294967296 * e2 + t2);
    else B() ? r2 = "" + (BigInt(e2) << BigInt(32) | BigInt(t2)) : (t2 = (16777215 & t2) + 6777216 * (r2 = 16777215 & (t2 >>> 24 | e2 << 8)) + 6710656 * (e2 = e2 >> 16 & 65535), r2 += 8147497 * e2, e2 *= 2, 1e7 <= t2 && (r2 += Math.floor(t2 / 1e7), t2 %= 1e7), 1e7 <= r2 && (e2 += Math.floor(r2 / 1e7), r2 %= 1e7), r2 = e2 + C(r2) + C(t2));
    return r2;
  }
  function C(t2) {
    return t2 = String(t2), "0000000".slice(t2.length) + t2;
  }
  function M(t2) {
    if (16 > t2.length) F(Number(t2));
    else if (B()) t2 = BigInt(t2), D = Number(t2 & BigInt(4294967295)) >>> 0, j = Number(t2 >> BigInt(32) & BigInt(4294967295));
    else {
      const e2 = +("-" === t2[0]);
      j = D = 0;
      const r2 = t2.length;
      for (let n2 = e2, i2 = (r2 - e2) % 6 + e2; i2 <= r2; n2 = i2, i2 += 6) {
        const e3 = Number(t2.slice(n2, i2));
        j *= 1e6, D = 1e6 * D + e3, 4294967296 <= D && (j += Math.trunc(D / 4294967296), j >>>= 0, D >>>= 0);
      }
      if (e2) {
        const [t3, e3] = G(D, j);
        D = t3, j = e3;
      }
    }
  }
  function G(t2, e2) {
    return e2 = ~e2, t2 ? t2 = 1 + ~t2 : e2 += 1, [t2, e2];
  }
  function R(t2) {
    return t2 ? /^\d+$/.test(t2) ? (M(t2), new z(D, j)) : null : W || (W = new z(0, 0));
  }
  var z = class {
    constructor(t2, e2) {
      this.j = t2 >>> 0, this.i = e2 >>> 0;
    }
  };
  var W;
  function $(t2) {
    return t2 ? /^-?\d+$/.test(t2) ? (M(t2), new H(D, j)) : null : q || (q = new H(0, 0));
  }
  var H = class {
    constructor(t2, e2) {
      this.j = t2 >>> 0, this.i = e2 >>> 0;
    }
  };
  var q;
  function K(t2, e2, r2) {
    for (; 0 < r2 || 127 < e2; ) t2.i.push(127 & e2 | 128), e2 = (e2 >>> 7 | r2 << 25) >>> 0, r2 >>>= 7;
    t2.i.push(e2);
  }
  function Y(t2, e2) {
    for (; 127 < e2; ) t2.i.push(127 & e2 | 128), e2 >>>= 7;
    t2.i.push(e2);
  }
  function J(t2, e2) {
    if (0 <= e2) Y(t2, e2);
    else {
      for (let r2 = 0; 9 > r2; r2++) t2.i.push(127 & e2 | 128), e2 >>= 7;
      t2.i.push(1);
    }
  }
  function X(t2, e2) {
    0 !== e2.length && (t2.l.push(e2), t2.j += e2.length);
  }
  function Q(t2, e2) {
    return Y(t2.i, 8 * e2 + 2), e2 = t2.i.end(), X(t2, e2), e2.push(t2.j), e2;
  }
  function Z(t2, e2) {
    var r2 = e2.pop();
    for (r2 = t2.j + t2.i.length() - r2; 127 < r2; ) e2.push(127 & r2 | 128), r2 >>>= 7, t2.j++;
    e2.push(r2), t2.j++;
  }
  function tt(t2, e2, r2) {
    Y(t2.i, 8 * e2 + 2), Y(t2.i, r2.length), X(t2, t2.i.end()), X(t2, r2);
  }
  var et = class {
    constructor(t2, e2) {
      this.i = t2, this.N = e2;
    }
  };
  function rt(t2) {
    return Array.prototype.slice.call(t2);
  }
  function nt(t2) {
    return "function" == typeof Symbol && "symbol" == typeof Symbol() ? Symbol() : t2;
  }
  var it = nt();
  var ot = nt("2ex");
  var st = nt("0dg");
  var at = it ? (t2, e2) => {
    t2[it] |= e2;
  } : (t2, e2) => {
    void 0 !== t2.i ? t2.i |= e2 : Object.defineProperties(t2, { i: { value: e2, configurable: true, writable: true, enumerable: false } });
  };
  var ut = it ? (t2, e2) => {
    t2[it] &= ~e2;
  } : (t2, e2) => {
    void 0 !== t2.i && (t2.i &= ~e2);
  };
  function ct(t2, e2, r2) {
    return r2 ? t2 | e2 : t2 & ~e2;
  }
  var lt = it ? (t2) => 0 | t2[it] : (t2) => 0 | t2.i;
  var ht = it ? (t2) => t2[it] : (t2) => t2.i;
  var ft = it ? (t2, e2) => (t2[it] = e2, t2) : (t2, e2) => (void 0 !== t2.i ? t2.i = e2 : Object.defineProperties(t2, { i: { value: e2, configurable: true, writable: true, enumerable: false } }), t2);
  function dt(t2, e2) {
    ft(e2, -14591 & (0 | t2));
  }
  function pt(t2, e2) {
    ft(e2, -14557 & (34 | t2));
  }
  function gt(t2) {
    return 0 === (t2 = t2 >> 14 & 1023) ? 536870912 : t2;
  }
  var mt;
  var _t = {};
  var vt = {};
  function yt(t2) {
    return !(!t2 || "object" != typeof t2 || t2.i !== vt);
  }
  function bt(t2) {
    return null !== t2 && "object" == typeof t2 && !Array.isArray(t2) && t2.constructor === Object;
  }
  function wt(t2, e2, r2) {
    if (!Array.isArray(t2) || t2.length) return false;
    const n2 = lt(t2);
    return !!(1 & n2) || !(!e2 || !(Array.isArray(e2) ? e2.includes(r2) : e2.has(r2))) && (ft(t2, 1 | n2), true);
  }
  var St = [];
  function At(t2) {
    if (2 & t2) throw Error();
  }
  ft(St, 55), mt = Object.freeze(St);
  function Tt(t2, e2) {
    t2.__closure__error__context__984382 || (t2.__closure__error__context__984382 = {}), t2.__closure__error__context__984382.severity = e2;
  }
  var Et;
  function It() {
    const e2 = Error();
    Tt(e2, "incident"), function(e3) {
      t.setTimeout(() => {
        throw e3;
      }, 0);
    }(e2);
  }
  function Pt(t2) {
    return Tt(t2 = Error(t2), "warning"), t2;
  }
  function Ot(t2) {
    if (null != t2 && "number" != typeof t2) throw Error(`Value of float/double field must be a number, found ${typeof t2}: ${t2}`);
    return t2;
  }
  Object.freeze(new class {
  }()), Object.freeze(new class {
  }());
  var Lt = /^-?([1-9][0-9]*|0)(\.[0-9]+)?$/;
  function Ut(t2) {
    const e2 = typeof t2;
    return "number" === e2 ? Number.isFinite(t2) : "string" === e2 && Lt.test(t2);
  }
  function xt(t2) {
    if ("number" != typeof t2) throw Pt("int32");
    if (!Number.isFinite(t2)) throw Pt("int32");
    return 0 | t2;
  }
  function kt(t2) {
    return null == t2 ? t2 : xt(t2);
  }
  function Bt(t2) {
    if (null == t2) return t2;
    if ("string" == typeof t2) {
      if (!t2) return;
      t2 = +t2;
    }
    return "number" == typeof t2 && Number.isFinite(t2) ? 0 | t2 : void 0;
  }
  function Nt(t2) {
    if (null != t2) {
      if ("number" != typeof t2) throw Pt("uint32");
      if (!Number.isFinite(t2)) throw Pt("uint32");
      t2 >>>= 0;
    }
    return t2;
  }
  function Dt(t2) {
    if (null == t2) return t2;
    if ("string" == typeof t2) {
      if (!t2) return;
      t2 = +t2;
    }
    return "number" == typeof t2 && Number.isFinite(t2) ? t2 >>> 0 : void 0;
  }
  function jt(t2) {
    return "-" !== t2[0] && (20 > t2.length || 20 === t2.length && 184467 > Number(t2.substring(0, 6)));
  }
  function Ft(t2) {
    return null == t2 || "string" == typeof t2 ? t2 : void 0;
  }
  function Vt(t2, e2, r2) {
    if (null != t2 && "object" == typeof t2 && t2.K === _t) return t2;
    if (Array.isArray(t2)) {
      var n2 = lt(t2), i2 = n2;
      return 0 === i2 && (i2 |= 32 & r2), (i2 |= 2 & r2) !== n2 && ft(t2, i2), new e2(t2);
    }
  }
  var Ct;
  var Mt;
  var Gt;
  function Rt(t2, e2, r2) {
    if (null == t2 && (t2 = Ct), Ct = void 0, null == t2) {
      var n2 = 96;
      r2 ? (t2 = [r2], n2 |= 512) : t2 = [], e2 && (n2 = -16760833 & n2 | (1023 & e2) << 14);
    } else {
      if (!Array.isArray(t2)) throw Error("narr");
      if (2048 & (n2 = lt(t2))) throw Error("farr");
      if (64 & n2) return t2;
      if (n2 |= 64, r2 && (n2 |= 512, r2 !== t2[0])) throw Error("mid");
      t: {
        const i2 = (r2 = t2).length;
        if (i2) {
          const t3 = i2 - 1;
          if (bt(r2[t3])) {
            if (1024 <= (e2 = t3 - (+!!(512 & (n2 |= 256)) - 1))) throw Error("pvtlmt");
            n2 = -16760833 & n2 | (1023 & e2) << 14;
            break t;
          }
        }
        if (e2) {
          if (1024 < (e2 = Math.max(e2, i2 - (+!!(512 & n2) - 1)))) throw Error("spvt");
          n2 = -16760833 & n2 | (1023 & e2) << 14;
        }
      }
    }
    return ft(t2, n2), t2;
  }
  function zt(t2, e2, r2, n2, i2) {
    if (null != t2) {
      if (Array.isArray(t2)) t2 = wt(t2, void 0, 0) ? void 0 : i2 && 2 & lt(t2) ? t2 : Wt(t2, e2, r2, void 0 !== n2, i2);
      else if (bt(t2)) {
        const o2 = {};
        for (let s2 in t2) o2[s2] = zt(t2[s2], e2, r2, n2, i2);
        t2 = o2;
      } else t2 = e2(t2, n2);
      return t2;
    }
  }
  function Wt(t2, e2, r2, n2, i2) {
    const o2 = n2 || r2 ? lt(t2) : 0;
    n2 = n2 ? !!(32 & o2) : void 0, t2 = rt(t2);
    for (let o3 = 0; o3 < t2.length; o3++) t2[o3] = zt(t2[o3], e2, r2, n2, i2);
    return r2 && r2(o2, t2), t2;
  }
  function $t(t2) {
    return t2.K === _t ? t2.toJSON() : function(t3) {
      switch (typeof t3) {
        case "number":
          return isFinite(t3) ? t3 : String(t3);
        case "boolean":
          return t3 ? 1 : 0;
        case "object":
          if (t3) if (Array.isArray(t3)) {
            if (wt(t3, void 0, 0)) return;
          } else {
            if (E(t3)) return b(t3);
            if (t3 instanceof x) {
              const e2 = t3.i;
              return null == e2 ? "" : "string" == typeof e2 ? e2 : t3.i = b(e2);
            }
          }
      }
      return t3;
    }(t2);
  }
  function Ht(t2, e2, r2 = pt) {
    if (null != t2) {
      if (v && t2 instanceof Uint8Array) return e2 ? t2 : new Uint8Array(t2);
      if (Array.isArray(t2)) {
        var n2 = lt(t2);
        return 2 & n2 || (e2 && (e2 = 0 === n2 || !!(32 & n2) && !(64 & n2 || !(16 & n2))), t2 = e2 ? ft(t2, -12293 & (34 | n2)) : Wt(t2, Ht, 4 & n2 ? pt : r2, true, true)), t2;
      }
      return t2.K === _t && (r2 = t2.m, t2 = 2 & (n2 = ht(r2)) ? t2 : qt(t2, r2, n2, true)), t2;
    }
  }
  function qt(t2, e2, r2, n2) {
    return t2 = t2.constructor, Ct = e2 = function(t3, e3, r3) {
      const n3 = r3 || 2 & e3 ? pt : dt, i2 = !!(32 & e3);
      return t3 = function(t4, e4, r4) {
        var n4 = (t4 = rt(t4)).length;
        const i3 = 256 & e4 ? t4[n4 - 1] : void 0;
        for (n4 += i3 ? -1 : 0, e4 = 512 & e4 ? 1 : 0; e4 < n4; e4++) t4[e4] = r4(t4[e4]);
        if (i3) {
          e4 = t4[e4] = {};
          for (const t5 in i3) e4[t5] = r4(i3[t5]);
        }
        return t4;
      }(t3, e3, (t4) => Ht(t4, i2, n3)), at(t3, 32 | (r3 ? 2 : 0)), t3;
    }(e2, r2, n2), e2 = new t2(e2), Ct = void 0, e2;
  }
  function Kt(t2) {
    const e2 = t2.m, r2 = ht(e2);
    return 2 & r2 ? qt(t2, e2, r2, false) : t2;
  }
  function Yt(t2, e2, r2, n2) {
    return !(4 & e2) || null != r2 && (!n2 && 0 === r2 && (4096 & e2 || 8192 & e2) && 5 > (t2.constructor[st] = 1 + (0 | t2.constructor[st])) && It(), 0 !== r2 && !(r2 & e2));
  }
  function Jt(t2) {
    return Qt(t2 = t2.m, ht(t2), 2);
  }
  function Xt(t2, e2, r2, n2) {
    if (!(0 > (e2 = n2 + (+!!(512 & e2) - 1)) || e2 >= t2.length || e2 >= r2)) return t2[e2];
  }
  function Qt(t2, e2, r2, n2) {
    if (-1 === r2) return null;
    const i2 = gt(e2);
    if (!(r2 >= i2)) {
      var o2 = t2.length;
      return n2 && 256 & e2 && null != (n2 = t2[o2 - 1][r2]) ? (Xt(t2, e2, i2, r2) && null != ot && (4 <= (e2 = (t2 = Et != null ? Et : Et = {})[ot] || 0) || (t2[ot] = e2 + 1, It())), n2) : Xt(t2, e2, i2, r2);
    }
    return 256 & e2 ? t2[t2.length - 1][r2] : void 0;
  }
  function Zt(t2, e2, r2) {
    const n2 = t2.m;
    let i2 = ht(n2);
    return At(i2), te(n2, i2, e2, r2), t2;
  }
  function te(t2, e2, r2, n2, i2) {
    const o2 = gt(e2);
    if (r2 >= o2 || i2) {
      let s2 = e2;
      if (256 & e2) i2 = t2[t2.length - 1];
      else {
        if (null == n2) return s2;
        i2 = t2[o2 + (+!!(512 & e2) - 1)] = {}, s2 |= 256;
      }
      return i2[r2] = n2, r2 < o2 && (t2[r2 + (+!!(512 & e2) - 1)] = void 0), s2 !== e2 && ft(t2, s2), s2;
    }
    return t2[r2 + (+!!(512 & e2) - 1)] = n2, 256 & e2 && (r2 in (t2 = t2[t2.length - 1]) && delete t2[r2]), e2;
  }
  function ee(t2, e2, r2) {
    return t2 = Qt(t2, e2, r2), Array.isArray(t2) ? t2 : mt;
  }
  function re(t2, e2) {
    return 0 === t2 && (t2 = ue(t2, e2)), ct(t2, 1, true);
  }
  function ne(t2) {
    return !!(2 & t2) && !!(4 & t2) || !!(2048 & t2);
  }
  function ie(t2, e2, r2) {
    {
      const a2 = t2.m;
      let u2 = ht(a2);
      if (At(u2), null == r2) te(a2, u2, e2);
      else {
        var n2, i2 = lt(r2), o2 = i2, s2 = !!(2 & i2) || Object.isFrozen(r2);
        if ((n2 = !s2) && (n2 = false), Yt(t2, i2)) for (i2 = 21, s2 && (r2 = rt(r2), o2 = 0, i2 = ce(i2 = ue(i2, u2), u2, true)), t2 = 0; t2 < r2.length; t2++) r2[t2] = xt(r2[t2]);
        n2 && (r2 = rt(r2), o2 = 0, i2 = ce(i2 = ue(i2, u2), u2, true)), i2 !== o2 && ft(r2, i2), te(a2, u2, e2, r2);
      }
    }
  }
  function oe(t2, e2, r2, n2) {
    t2 = t2.m;
    let i2 = ht(t2);
    At(i2), te(t2, i2, e2, ("0" === n2 ? 0 === Number(r2) : r2 === n2) ? void 0 : r2);
  }
  function se(t2, e2, r2) {
    var n2 = t2.m, i2 = ht(n2), o2 = Qt(n2, i2, r2, false);
    return (e2 = Vt(o2, e2, i2)) !== o2 && null != e2 && te(n2, i2, r2, e2, false), null == (n2 = e2) || (t2 = t2.m, 2 & (i2 = ht(t2)) || (o2 = Kt(n2)) !== n2 && te(t2, i2, r2, n2 = o2, false)), n2;
  }
  function ae(t2, e2, r2) {
    return null == r2 && (r2 = void 0), Zt(t2, e2, r2);
  }
  function ue(t2, e2) {
    return t2 = ct(t2, 2, !!(2 & e2)), t2 = ct(t2, 32, true), ct(t2, 2048, false);
  }
  function ce(t2, e2, r2) {
    return 32 & e2 && r2 || (t2 = ct(t2, 32, false)), t2;
  }
  function le(t2, e2, r2, n2) {
    t2 = t2.m;
    var i2 = ht(t2);
    At(i2);
    var o2 = !!(2 & i2);
    const s2 = o2 ? 1 : 2;
    f2 && (f2 = !o2), o2 = ee(t2, i2, e2);
    var a2 = lt(o2);
    const u2 = !!(4 & a2);
    if (!u2) {
      var c2 = o2, l2 = i2, h2 = !!(2 & (a2 = re(a2, i2)));
      h2 && (l2 = ct(l2, 2, true));
      let t3 = !h2, e3 = true, n3 = 0, s3 = 0;
      for (; n3 < c2.length; n3++) {
        const i3 = Vt(c2[n3], r2, l2);
        if (i3 instanceof r2) {
          if (!h2) {
            const r3 = !!(2 & lt(i3.m));
            t3 && (t3 = !r3), e3 && (e3 = r3);
          }
          c2[s3++] = i3;
        }
      }
      s3 < n3 && (c2.length = s3), a2 = ct(a2, 4, true), a2 = ct(a2, 16, e3), a2 = ct(a2, 8, t3), ft(c2, a2), h2 && Object.freeze(c2);
    }
    if (f2 && !(8 & a2 || !o2.length && (1 === s2 || 4 === s2 && 32 & a2))) {
      ne(a2) && (o2 = rt(o2), a2 = ue(a2, i2), i2 = te(t2, i2, e2, o2));
      var f2 = o2;
      for (c2 = a2, a2 = 0; a2 < f2.length; a2++) (l2 = f2[a2]) !== (h2 = Kt(l2)) && (f2[a2] = h2);
      c2 = ct(c2, 8, true), c2 = ct(c2, 16, !f2.length), ft(f2, c2), a2 = c2;
    }
    ne(a2) || (f2 = a2, (a2 = (c2 = 1 === s2 || 4 === s2 && !!(32 & a2)) ? ct(a2, !o2.length || 16 & a2 && (!u2 || 32 & a2) ? 2 : 2048, true) : ce(a2, i2, true)) !== f2 && ft(o2, a2), c2 && Object.freeze(o2)), 2 === s2 && ne(a2) && (o2 = rt(o2), a2 = ce(a2 = ue(a2, i2), i2, true), ft(o2, a2), te(t2, i2, e2, o2)), e2 = o2, r2 = null != n2 ? n2 : new r2(), e2.push(r2), 2 & lt(r2.m) ? ut(e2, 8) : ut(e2, 16);
  }
  function he(t2, e2, r2) {
    oe(t2, e2, kt(r2), 0);
  }
  function fe(t2, e2, r2) {
    if (null != r2 && "string" != typeof r2) throw Error();
    oe(t2, e2, r2, "");
  }
  function de(t2, e2, r2) {
    t2 = t2.m;
    const n2 = ht(t2);
    At(n2);
    var i2 = 2 & n2;
    let o2 = Qt(t2, n2, e2);
    Array.isArray(o2) || (o2 = mt);
    const s2 = !!(32 & n2);
    let a2 = lt(o2);
    if (0 === a2 && s2 && !i2 ? (a2 |= 33, ft(o2, a2)) : 1 & a2 || (a2 |= 1, ft(o2, a2)), i2 ? (2 & a2 || at(o2, 34), Object.freeze(o2)) : (2 & a2 || 2048 & a2) && (o2 = rt(o2), i2 = 1, s2 && (i2 |= 32), ft(o2, i2), te(t2, n2, e2, o2)), "string" != typeof r2) throw Error();
    o2.push(r2);
  }
  var pe = class {
    constructor(t2, e2) {
      this.m = Rt(t2, e2);
    }
    toJSON() {
      return ge(this, Wt(this.m, $t, void 0, void 0, false), true);
    }
    v() {
      return !!(2 & lt(this.m));
    }
  };
  function ge(t2, e2, r2) {
    var n2 = a ? void 0 : t2.constructor.A;
    const i2 = ht(r2 ? t2.m : e2);
    if (!(t2 = e2.length)) return e2;
    let o2, s2;
    if (bt(r2 = e2[t2 - 1])) {
      t: {
        var u2 = r2;
        let t3 = {}, e3 = false;
        for (var c2 in u2) {
          let r3 = u2[c2];
          if (Array.isArray(r3)) {
            let t4 = r3;
            (wt(r3, n2, +c2) || yt(r3) && 0 === r3.size) && (r3 = null), r3 != t4 && (e3 = true);
          }
          null != r3 ? t3[c2] = r3 : e3 = true;
        }
        if (e3) {
          for (var l2 in t3) {
            u2 = t3;
            break t;
          }
          u2 = null;
        }
      }
      u2 != r2 && (o2 = true), t2--;
    }
    for (c2 = +!!(512 & i2) - 1; 0 < t2 && (r2 = e2[l2 = t2 - 1], l2 -= c2, null == r2 || wt(r2, n2, l2) || yt(r2) && 0 === r2.size); t2--) s2 = true;
    return o2 || s2 ? (e2 = Array.prototype.slice.call(e2, 0, t2), u2 && e2.push(u2), e2) : e2;
  }
  function me(t2, e2) {
    if (Array.isArray(e2)) {
      var r2 = lt(e2);
      if (4 & r2) return e2;
      for (var n2 = 0, i2 = 0; n2 < e2.length; n2++) {
        const r3 = t2(e2[n2]);
        null != r3 && (e2[i2++] = r3);
      }
      return i2 < n2 && (e2.length = i2), ft(e2, -12289 & (5 | r2)), 2 & r2 && Object.freeze(e2), e2;
    }
  }
  pe.prototype.K = _t, pe.prototype.toString = function() {
    return ge(this, this.m, false).toString();
  };
  var _e = Symbol();
  var ve = Symbol();
  function ye(t2) {
    let e2 = t2[ve];
    if (!e2) {
      const r2 = Ae(t2);
      e2 = (t3, e3) => Ie(t3, e3, r2), t2[ve] = e2;
    }
    return e2;
  }
  var be = Symbol();
  function we(t2) {
    return t2.i;
  }
  function Se(t2, e2) {
    let r2, n2;
    const i2 = t2.i;
    return (t3, o2, s2) => i2(t3, o2, s2, n2 || (n2 = Ae(e2).i), r2 || (r2 = ye(e2)));
  }
  function Ae(t2) {
    var e2 = t2[be];
    if (e2) return e2;
    var r2 = we, n2 = Se;
    (e2 = t2[be] = {}).i = function(t3) {
      switch (typeof t3) {
        case "boolean":
          return Mt || (Mt = [0, void 0, true]);
        case "number":
          return 0 < t3 ? void 0 : 0 === t3 ? Gt || (Gt = [0, void 0]) : [-t3, void 0];
        case "string":
          return [0, t3];
        case "object":
          return t3;
      }
    }(t2[0]);
    let i2 = 0;
    var o2 = t2[++i2];
    o2 && o2.constructor === Object && (e2.R = o2, "function" == typeof (o2 = t2[++i2]) && (e2.l = o2, e2.j = t2[++i2], o2 = t2[++i2]));
    const s2 = {};
    for (; Array.isArray(o2) && "number" == typeof o2[0] && 0 < o2[0]; ) {
      for (var a2 = 0; a2 < o2.length; a2++) s2[o2[a2]] = o2;
      o2 = t2[++i2];
    }
    for (a2 = 1; void 0 !== o2; ) {
      let f2;
      "number" == typeof o2 && (a2 += o2, o2 = t2[++i2]);
      var u2 = void 0;
      if (o2 instanceof et ? f2 = o2 : (f2 = Ke, i2--), f2.N) {
        o2 = t2[++i2], u2 = t2;
        var c2 = i2;
        "function" == typeof o2 && (o2 = o2(), u2[c2] = o2), u2 = o2;
      }
      let d2 = a2 + 1;
      for ("number" == typeof (o2 = t2[++i2]) && 0 > o2 && (d2 -= o2, o2 = t2[++i2]); a2 < d2; a2++) {
        var l2 = s2[a2];
        c2 = e2;
        var h2 = a2;
        l2 = u2 ? n2(f2, u2) : r2(f2), c2[h2] = l2;
      }
    }
    return Te in t2 && _e in t2 && be in t2 && (t2.length = 0), e2;
  }
  var Te = Symbol();
  function Ee(t2, e2) {
    var r2 = t2[e2];
    if (r2) return r2;
    if ((r2 = t2.R) && (r2 = r2[e2])) {
      var n2 = (r2 = Array.isArray(r2) ? r2[0] instanceof et ? r2 : [qe, r2] : [r2, void 0])[0].i;
      if (r2 = r2[1]) {
        const e3 = ye(r2), i2 = Ae(r2).i;
        r2 = (r2 = t2.j) ? r2(i2, e3) : (t3, r3, o2) => n2(t3, r3, o2, i2, e3);
      } else r2 = n2;
      return t2[e2] = r2;
    }
  }
  function Ie(t2, e2, r2) {
    var n2 = ht(t2), i2 = +!!(512 & n2) - 1, o2 = t2.length, s2 = 512 & n2 ? 1 : 0;
    const a2 = o2 + (256 & n2 ? -1 : 0);
    for (; s2 < a2; s2++) {
      const n3 = t2[s2];
      if (null == n3) continue;
      const o3 = s2 - i2, a3 = Ee(r2, o3);
      a3 && a3(e2, n3, o3);
    }
    if (256 & n2) {
      t2 = t2[o2 - 1];
      for (let s3 in t2) n2 = +s3, Number.isNaN(n2) || null != (i2 = t2[s3]) && (o2 = Ee(r2, n2)) && o2(e2, i2, n2);
    }
  }
  function Pe(t2) {
    return new et(t2, false);
  }
  function Oe(t2, e2, r2) {
    null != (e2 = Bt(e2)) && null != e2 && (Y(t2.i, 8 * r2), J(t2.i, e2));
  }
  function Le(t2, e2, r2) {
    null != (e2 = null == e2 || "boolean" == typeof e2 ? e2 : "number" == typeof e2 ? !!e2 : void 0) && (Y(t2.i, 8 * r2), t2.i.i.push(e2 ? 1 : 0));
  }
  function Ue(t2, e2, r2) {
    null != (e2 = Ft(e2)) && tt(t2, r2, i(e2));
  }
  function xe(t2, e2, r2, n2, i2) {
    null != (e2 = e2 instanceof pe ? e2.m : Array.isArray(e2) ? Rt(e2, n2[0], n2[1]) : void 0) && (r2 = Q(t2, r2), i2(e2, t2), Z(t2, r2));
  }
  function ke(t2, e2, r2) {
    null != (e2 = Bt(e2)) && (e2 = parseInt(e2, 10), Y(t2.i, 8 * r2), J(t2.i, e2));
  }
  var Be;
  var Ne = Pe(function(t2, e2, r2) {
    null != (e2 = null == e2 || "number" == typeof e2 ? e2 : "NaN" === e2 || "Infinity" === e2 || "-Infinity" === e2 ? Number(e2) : void 0) && (Y(t2.i, 8 * r2 + 5), t2 = t2.i, (r2 = N || (N = new DataView(new ArrayBuffer(8)))).setFloat32(0, +e2, true), j = 0, e2 = D = r2.getUint32(0, true), t2.i.push(e2 >>> 0 & 255), t2.i.push(e2 >>> 8 & 255), t2.i.push(e2 >>> 16 & 255), t2.i.push(e2 >>> 24 & 255));
  });
  var De = Pe(function(t2, e2, r2) {
    t: if (null != e2) {
      if (Ut(e2)) {
        if ("string" == typeof e2) {
          var n2 = Math.trunc(Number(e2));
          if (Number.isSafeInteger(n2)) e2 = String(n2);
          else if (-1 !== (n2 = e2.indexOf(".")) && (e2 = e2.substring(0, n2)), !("-" === e2[0] ? 20 > e2.length || 20 === e2.length && -922337 < Number(e2.substring(0, 7)) : 19 > e2.length || 19 === e2.length && 922337 > Number(e2.substring(0, 6)))) if (M(e2), e2 = D, 2147483648 & (n2 = j)) if (B()) e2 = "" + (BigInt(0 | n2) << BigInt(32) | BigInt(e2 >>> 0));
          else {
            const [t3, r3] = G(e2, n2);
            e2 = "-" + V(t3, r3);
          }
          else e2 = V(e2, n2);
          break t;
        }
        if ("number" == typeof e2) {
          if (e2 = Math.trunc(e2), !Number.isSafeInteger(e2)) {
            F(e2), n2 = D;
            var i2 = j;
            (e2 = 2147483648 & i2) && (i2 = ~i2 >>> 0, 0 == (n2 = 1 + ~n2 >>> 0) && (i2 = i2 + 1 >>> 0)), n2 = 4294967296 * i2 + (n2 >>> 0), e2 = e2 ? -n2 : n2;
          }
          break t;
        }
      }
      e2 = void 0;
    }
    null != e2 && ("string" == typeof e2 && $(e2), null != e2 && (Y(t2.i, 8 * r2), "number" == typeof e2 ? (t2 = t2.i, F(e2), K(t2, D, j)) : (r2 = $(e2), K(t2.i, r2.j, r2.i))));
  });
  var je = Pe(function(t2, e2, r2) {
    t: if (null != e2) {
      if (Ut(e2)) {
        if ("string" == typeof e2) {
          var n2 = Math.trunc(Number(e2));
          Number.isSafeInteger(n2) && 0 <= n2 ? e2 = String(n2) : (-1 !== (n2 = e2.indexOf(".")) && (e2 = e2.substring(0, n2)), jt(e2) || (M(e2), e2 = V(D, j)));
          break t;
        }
        if ("number" == typeof e2) {
          e2 = 0 <= (e2 = Math.trunc(e2)) && Number.isSafeInteger(e2) ? e2 : function(t3) {
            if (0 > t3) {
              F(t3);
              const e3 = V(D, j);
              return t3 = Number(e3), Number.isSafeInteger(t3) ? t3 : e3;
            }
            return jt(String(t3)) ? t3 : (F(t3), 4294967296 * j + (D >>> 0));
          }(e2);
          break t;
        }
      }
      e2 = void 0;
    }
    null != e2 && ("string" == typeof e2 && R(e2), null != e2 && (Y(t2.i, 8 * r2), "number" == typeof e2 ? (t2 = t2.i, F(e2), K(t2, D, j)) : (r2 = R(e2), K(t2.i, r2.j, r2.i))));
  });
  var Fe = Pe(Oe);
  var Ve = new et(function(t2, e2, r2) {
    if (null != (e2 = me(Bt, e2)) && e2.length) {
      r2 = Q(t2, r2);
      for (let r3 = 0; r3 < e2.length; r3++) J(t2.i, e2[r3]);
      Z(t2, r2);
    }
  }, false);
  var Ce = Pe(Oe);
  var Me = Pe(Oe);
  var Ge = Pe(Le);
  var Re = Pe(Le);
  var ze = new et(function(t2, e2, r2) {
    if (null != (e2 = me(Ft, e2))) for (let a2 = 0; a2 < e2.length; a2++) {
      var n2 = t2, o2 = r2, s2 = e2[a2];
      null != s2 && tt(n2, o2, i(s2));
    }
  }, false);
  var We = Pe(Ue);
  var $e = Pe(Ue);
  var He = Pe(Ue);
  var qe = new et(xe, true);
  var Ke = new et(xe, true);
  Be = new et(function(t2, e2, r2, n2, i2) {
    if (Array.isArray(e2)) for (let o2 = 0; o2 < e2.length; o2++) xe(t2, e2[o2], r2, n2, i2);
  }, true);
  var Ye = new et(xe, true);
  var Je = Pe(ke);
  var Xe = new et(function(t2, e2, r2) {
    if (null != (e2 = me(Bt, e2)) && e2.length) {
      r2 = Q(t2, r2);
      for (let r3 = 0; r3 < e2.length; r3++) J(t2.i, e2[r3]);
      Z(t2, r2);
    }
  }, false);
  var Qe = Pe(ke);
  function Ze(t2) {
    return function() {
      const e2 = new class {
        constructor() {
          this.l = [], this.j = 0, this.i = new class {
            constructor() {
              this.i = [];
            }
            length() {
              return this.i.length;
            }
            end() {
              const t3 = this.i;
              return this.i = [], t3;
            }
          }();
        }
      }();
      Ie(this.m, e2, Ae(t2)), X(e2, e2.i.end());
      const r2 = new Uint8Array(e2.j), n2 = e2.l, i2 = n2.length;
      let o2 = 0;
      for (let t3 = 0; t3 < i2; t3++) {
        const e3 = n2[t3];
        r2.set(e3, o2), o2 += e3.length;
      }
      return e2.l = [r2], r2;
    };
  }
  function tr(t2, e2) {
    if (null != e2) if (Array.isArray(e2)) Zt(t2, 2, Wt(e2, $t, void 0, void 0, false));
    else {
      if (!("string" == typeof e2 || e2 instanceof x || E(e2))) throw Error("invalid value in Any.value field: " + e2 + " expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array");
      if (null != e2) {
        if ("string" == typeof e2) e2 = e2 ? new x(e2, P) : U();
        else if (e2.constructor !== x) {
          if (!E(e2)) throw Error();
          e2 = e2.length ? new x(new Uint8Array(e2), P) : U();
        }
      }
      oe(t2, 2, e2, U());
    }
  }
  var er = class extends pe {
    constructor(t2) {
      super(t2);
    }
  };
  var rr = [0, We, Pe(function(t2, e2, r2) {
    if (null != e2) {
      if (e2 instanceof pe) {
        const n2 = e2.Y;
        return void (n2 && (e2 = n2(e2), null != e2 && tt(t2, r2, k(e2).buffer)));
      }
      if (Array.isArray(e2)) return;
    }
    null != (e2 = null == e2 || "string" == typeof e2 || E(e2) || e2 instanceof x ? e2 : void 0) && tt(t2, r2, k(e2).buffer);
  })];
  var nr = {};
  var ir = [-2, nr, Ge];
  nr[336783863] = [0, He, Ge, -1, Fe, [0, [1, 2, 3, 4, 5, 6], Ye, [0], Ye, [0, Ge, He, Ge, Je, -1, Xe, He, -1, [0, Ge, -1], Je], Ye, [0, He, -2], Ye, [0, Fe, Ge, -4], Ye, [0, Fe, Je, Ge, -1, Ve, Je, -1], Ye, [0, He]], [0, He], Ge, [0, [1, 3], [2, 4], Ye, [0, Ve], -1, Ye, [0, ze], -1, Be, [0, He, -1]], He];
  var or = class extends pe {
    constructor(t2) {
      super(t2);
    }
  };
  var sr = [0, We, Re];
  var ar = [0, De, -1, Re, -3, De, Ve, We, Ce, De, -1, Re, Ce, Re, -2, We];
  var ur = [-1, {}];
  var cr = [0, He, 1, ur];
  var lr = [0, He, ze, ur];
  var hr = class extends pe {
    constructor(t2) {
      super(t2, 500);
    }
    J(t2) {
      return ae(this, 7, t2);
    }
  };
  hr.A = [3, 4, 5, 6, 8, 13, 17, 1005];
  var fr = [-500, We, -1, ze, -3, ir, Be, rr, Ce, -1, cr, lr, Be, sr, We, ar, Ce, ze, 987, ze];
  var dr = [0, We, -1, ur];
  var pr = [-500, He, -1, [-1, {}], 998, He];
  var gr = [-500, He, ze, -1, [-2, {}, Ge], 997, ze, -1];
  var mr = [-500, He, ze, ur, 998, ze];
  function _r(t2, e2) {
    le(t2, 1, hr, e2);
  }
  var vr = class extends pe {
    constructor() {
      super(void 0, 500);
    }
    J(t2) {
      return ae(this, 1001, t2);
    }
  };
  vr.A = [1, 6, 7, 9, 10, 15, 16, 17, 14, 1002], vr.prototype.i = Ze([-500, Be, fr, 4, Be, pr, Be, gr, Ce, Be, mr, ze, Ce, cr, lr, Be, dr, ze, -2, ar, We, -1, Re, 979, ur, Be, rr]);
  var yr = class extends pe {
    constructor(t2) {
      super(t2);
    }
  };
  var br;
  var wr = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]);
  function Sr() {
    return __async(this, null, function* () {
      if (void 0 === br) try {
        yield WebAssembly.instantiate(wr), br = true;
      } catch (e2) {
        br = false;
      }
      return br;
    });
  }
  function Ar(t2, e2 = "") {
    return __async(this, null, function* () {
      const r2 = (yield Sr()) ? "wasm_internal" : "wasm_nosimd_internal";
      return { wasmLoaderPath: `${e2}/${t2}_${r2}.js`, wasmBinaryPath: `${e2}/${t2}_${r2}.wasm` };
    });
  }
  var Tr = class {
  };
  function Er() {
    var t2 = navigator;
    return "undefined" != typeof OffscreenCanvas && (!function(t3 = navigator) {
      return (t3 = t3.userAgent).includes("Safari") && !t3.includes("Chrome");
    }(t2) || !!((t2 = t2.userAgent.match(/Version\/([\d]+).*Safari/)) && 1 <= t2.length && 17 <= Number(t2[1])));
  }
  function Ir(t2) {
    return __async(this, null, function* () {
      if ("function" != typeof importScripts) {
        const e2 = document.createElement("script");
        return e2.src = t2.toString(), e2.crossOrigin = "anonymous", new Promise((t3, r2) => {
          e2.addEventListener("load", () => {
            t3();
          }, false), e2.addEventListener("error", (t4) => {
            r2(t4);
          }, false), document.body.appendChild(e2);
        });
      }
      importScripts(t2.toString());
    });
  }
  Tr.forVisionTasks = function(t2) {
    return Ar("vision", t2);
  }, Tr.forTextTasks = function(t2) {
    return Ar("text", t2);
  }, Tr.forGenAiExperimentalTasks = function(t2) {
    return Ar("genai_experimental", t2);
  }, Tr.forGenAiTasks = function(t2) {
    return Ar("genai", t2);
  }, Tr.forAudioTasks = function(t2) {
    return Ar("audio", t2);
  }, Tr.isSimdSupported = function() {
    return Sr();
  };
  function Pr(t2, e2, r2) {
    t2.o || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"), r2(e2 = t2.h.stringToNewUTF8(e2)), t2.h._free(e2);
  }
  function Or(t2, e2, r2) {
    t2.o || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");
    const n2 = new Uint32Array(e2.length);
    for (let r3 = 0; r3 < e2.length; r3++) n2[r3] = t2.h.stringToNewUTF8(e2[r3]);
    e2 = t2.h._malloc(4 * n2.length), t2.h.HEAPU32.set(n2, e2 >> 2), r2(e2);
    for (const e3 of n2) t2.h._free(e3);
    t2.h._free(e2);
  }
  function Lr(t2, e2, r2) {
    t2.h.simpleListeners = t2.h.simpleListeners || {}, t2.h.simpleListeners[e2] = r2;
  }
  function Ur(t2, e2, r2) {
    let n2 = [];
    t2.h.simpleListeners = t2.h.simpleListeners || {}, t2.h.simpleListeners[e2] = (t3, e3, i2) => {
      e3 ? (r2(n2, i2), n2 = []) : n2.push(t3);
    };
  }
  var xr = (kr = class {
    constructor(t2, e2) {
      this.l = true, this.h = t2, this.i = null, this.j = 0, this.o = "function" == typeof this.h._addIntToInputStream, void 0 !== e2 ? this.h.canvas = e2 : Er() ? this.h.canvas = new OffscreenCanvas(1, 1) : (console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."), this.h.canvas = document.createElement("canvas"));
    }
    initializeGraph(t2) {
      return __async(this, null, function* () {
        const e2 = yield (yield fetch(t2)).arrayBuffer();
        t2 = !(t2.endsWith(".pbtxt") || t2.endsWith(".textproto")), this.setGraph(new Uint8Array(e2), t2);
      });
    }
    setGraphFromString(t2) {
      this.setGraph(new TextEncoder().encode(t2), false);
    }
    setGraph(t2, e2) {
      const r2 = t2.length, n2 = this.h._malloc(r2);
      this.h.HEAPU8.set(t2, n2), e2 ? this.h._changeBinaryGraph(r2, n2) : this.h._changeTextGraph(r2, n2), this.h._free(n2);
    }
    configureAudio(t2, e2, r2, n2, i2) {
      this.h._configureAudio || console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'), Pr(this, n2 || "input_audio", (n3) => {
        Pr(this, i2 = i2 || "audio_header", (i3) => {
          this.h._configureAudio(n3, i3, t2, e2, r2);
        });
      });
    }
    setAutoResizeCanvas(t2) {
      this.l = t2;
    }
    setAutoRenderToScreen(t2) {
      this.h._setAutoRenderToScreen(t2);
    }
    setGpuBufferVerticalFlip(t2) {
      this.h.gpuOriginForWebTexturesIsBottomLeft = t2;
    }
    attachErrorListener(t2) {
      this.h.errorListener = t2;
    }
    attachEmptyPacketListener(t2, e2) {
      this.h.emptyPacketListeners = this.h.emptyPacketListeners || {}, this.h.emptyPacketListeners[t2] = e2;
    }
    addAudioToStream(t2, e2, r2) {
      this.addAudioToStreamWithShape(t2, 0, 0, e2, r2);
    }
    addAudioToStreamWithShape(t2, e2, r2, n2, i2) {
      const o2 = 4 * t2.length;
      this.j !== o2 && (this.i && this.h._free(this.i), this.i = this.h._malloc(o2), this.j = o2), this.h.HEAPF32.set(t2, this.i / 4), Pr(this, n2, (t3) => {
        this.h._addAudioToInputStream(this.i, e2, r2, t3, i2);
      });
    }
    addGpuBufferToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        if (!this.h.canvas) throw Error("No OpenGL canvas configured.");
        e3 ? this.h._bindTextureToStream(e3) : this.h._bindTextureToCanvas();
        const n2 = this.h.canvas.getContext("webgl2") || this.h.canvas.getContext("webgl");
        if (!n2) throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");
        this.h.gpuOriginForWebTexturesIsBottomLeft && n2.pixelStorei(n2.UNPACK_FLIP_Y_WEBGL, true), n2.texImage2D(n2.TEXTURE_2D, 0, n2.RGBA, n2.RGBA, n2.UNSIGNED_BYTE, t2), this.h.gpuOriginForWebTexturesIsBottomLeft && n2.pixelStorei(n2.UNPACK_FLIP_Y_WEBGL, false);
        const [i2, o2] = void 0 !== t2.videoWidth ? [t2.videoWidth, t2.videoHeight] : void 0 !== t2.naturalWidth ? [t2.naturalWidth, t2.naturalHeight] : void 0 !== t2.displayWidth ? [t2.displayWidth, t2.displayHeight] : [t2.width, t2.height];
        !this.l || i2 === this.h.canvas.width && o2 === this.h.canvas.height || (this.h.canvas.width = i2, this.h.canvas.height = o2);
        const [s2, a2] = [i2, o2];
        this.h._addBoundTextureToStream(e3, s2, a2, r2);
      });
    }
    addBoolToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        this.h._addBoolToInputStream(t2, e3, r2);
      });
    }
    addDoubleToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        this.h._addDoubleToInputStream(t2, e3, r2);
      });
    }
    addFloatToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        this.h._addFloatToInputStream(t2, e3, r2);
      });
    }
    addIntToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        this.h._addIntToInputStream(t2, e3, r2);
      });
    }
    addUintToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        this.h._addUintToInputStream(t2, e3, r2);
      });
    }
    addStringToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        Pr(this, t2, (t3) => {
          this.h._addStringToInputStream(t3, e3, r2);
        });
      });
    }
    addStringRecordToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        Or(this, Object.keys(t2), (n2) => {
          Or(this, Object.values(t2), (i2) => {
            this.h._addFlatHashMapToInputStream(n2, i2, Object.keys(t2).length, e3, r2);
          });
        });
      });
    }
    addProtoToStream(t2, e2, r2, n2) {
      Pr(this, r2, (r3) => {
        Pr(this, e2, (e3) => {
          const i2 = this.h._malloc(t2.length);
          this.h.HEAPU8.set(t2, i2), this.h._addProtoToInputStream(i2, t2.length, e3, r3, n2), this.h._free(i2);
        });
      });
    }
    addEmptyPacketToStream(t2, e2) {
      Pr(this, t2, (t3) => {
        this.h._addEmptyPacketToInputStream(t3, e2);
      });
    }
    addBoolVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateBoolVector(t2.length);
        if (!n2) throw Error("Unable to allocate new bool vector on heap.");
        for (const e4 of t2) this.h._addBoolVectorEntry(n2, e4);
        this.h._addBoolVectorToInputStream(n2, e3, r2);
      });
    }
    addDoubleVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateDoubleVector(t2.length);
        if (!n2) throw Error("Unable to allocate new double vector on heap.");
        for (const e4 of t2) this.h._addDoubleVectorEntry(n2, e4);
        this.h._addDoubleVectorToInputStream(n2, e3, r2);
      });
    }
    addFloatVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateFloatVector(t2.length);
        if (!n2) throw Error("Unable to allocate new float vector on heap.");
        for (const e4 of t2) this.h._addFloatVectorEntry(n2, e4);
        this.h._addFloatVectorToInputStream(n2, e3, r2);
      });
    }
    addIntVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateIntVector(t2.length);
        if (!n2) throw Error("Unable to allocate new int vector on heap.");
        for (const e4 of t2) this.h._addIntVectorEntry(n2, e4);
        this.h._addIntVectorToInputStream(n2, e3, r2);
      });
    }
    addUintVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateUintVector(t2.length);
        if (!n2) throw Error("Unable to allocate new unsigned int vector on heap.");
        for (const e4 of t2) this.h._addUintVectorEntry(n2, e4);
        this.h._addUintVectorToInputStream(n2, e3, r2);
      });
    }
    addStringVectorToStream(t2, e2, r2) {
      Pr(this, e2, (e3) => {
        const n2 = this.h._allocateStringVector(t2.length);
        if (!n2) throw Error("Unable to allocate new string vector on heap.");
        for (const e4 of t2) Pr(this, e4, (t3) => {
          this.h._addStringVectorEntry(n2, t3);
        });
        this.h._addStringVectorToInputStream(n2, e3, r2);
      });
    }
    addBoolToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        this.h._addBoolToInputSidePacket(t2, e3);
      });
    }
    addDoubleToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        this.h._addDoubleToInputSidePacket(t2, e3);
      });
    }
    addFloatToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        this.h._addFloatToInputSidePacket(t2, e3);
      });
    }
    addIntToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        this.h._addIntToInputSidePacket(t2, e3);
      });
    }
    addUintToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        this.h._addUintToInputSidePacket(t2, e3);
      });
    }
    addStringToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        Pr(this, t2, (t3) => {
          this.h._addStringToInputSidePacket(t3, e3);
        });
      });
    }
    addProtoToInputSidePacket(t2, e2, r2) {
      Pr(this, r2, (r3) => {
        Pr(this, e2, (e3) => {
          const n2 = this.h._malloc(t2.length);
          this.h.HEAPU8.set(t2, n2), this.h._addProtoToInputSidePacket(n2, t2.length, e3, r3), this.h._free(n2);
        });
      });
    }
    addBoolVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateBoolVector(t2.length);
        if (!r2) throw Error("Unable to allocate new bool vector on heap.");
        for (const e4 of t2) this.h._addBoolVectorEntry(r2, e4);
        this.h._addBoolVectorToInputSidePacket(r2, e3);
      });
    }
    addDoubleVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateDoubleVector(t2.length);
        if (!r2) throw Error("Unable to allocate new double vector on heap.");
        for (const e4 of t2) this.h._addDoubleVectorEntry(r2, e4);
        this.h._addDoubleVectorToInputSidePacket(r2, e3);
      });
    }
    addFloatVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateFloatVector(t2.length);
        if (!r2) throw Error("Unable to allocate new float vector on heap.");
        for (const e4 of t2) this.h._addFloatVectorEntry(r2, e4);
        this.h._addFloatVectorToInputSidePacket(r2, e3);
      });
    }
    addIntVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateIntVector(t2.length);
        if (!r2) throw Error("Unable to allocate new int vector on heap.");
        for (const e4 of t2) this.h._addIntVectorEntry(r2, e4);
        this.h._addIntVectorToInputSidePacket(r2, e3);
      });
    }
    addUintVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateUintVector(t2.length);
        if (!r2) throw Error("Unable to allocate new unsigned int vector on heap.");
        for (const e4 of t2) this.h._addUintVectorEntry(r2, e4);
        this.h._addUintVectorToInputSidePacket(r2, e3);
      });
    }
    addStringVectorToInputSidePacket(t2, e2) {
      Pr(this, e2, (e3) => {
        const r2 = this.h._allocateStringVector(t2.length);
        if (!r2) throw Error("Unable to allocate new string vector on heap.");
        for (const e4 of t2) Pr(this, e4, (t3) => {
          this.h._addStringVectorEntry(r2, t3);
        });
        this.h._addStringVectorToInputSidePacket(r2, e3);
      });
    }
    attachBoolListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachBoolListener(t3);
      });
    }
    attachBoolVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachBoolVectorListener(t3);
      });
    }
    attachIntListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachIntListener(t3);
      });
    }
    attachIntVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachIntVectorListener(t3);
      });
    }
    attachUintListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachUintListener(t3);
      });
    }
    attachUintVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachUintVectorListener(t3);
      });
    }
    attachDoubleListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachDoubleListener(t3);
      });
    }
    attachDoubleVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachDoubleVectorListener(t3);
      });
    }
    attachFloatListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachFloatListener(t3);
      });
    }
    attachFloatVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachFloatVectorListener(t3);
      });
    }
    attachStringListener(t2, e2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachStringListener(t3);
      });
    }
    attachStringVectorListener(t2, e2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachStringVectorListener(t3);
      });
    }
    attachProtoListener(t2, e2, r2) {
      Lr(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachProtoListener(t3, r2 || false);
      });
    }
    attachProtoVectorListener(t2, e2, r2) {
      Ur(this, t2, e2), Pr(this, t2, (t3) => {
        this.h._attachProtoVectorListener(t3, r2 || false);
      });
    }
    attachAudioListener(t2, e2, r2) {
      this.h._attachAudioListener || console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'), Lr(this, t2, (t3, r3) => {
        t3 = new Float32Array(t3.buffer, t3.byteOffset, t3.length / 4), e2(t3, r3);
      }), Pr(this, t2, (t3) => {
        this.h._attachAudioListener(t3, r2 || false);
      });
    }
    finishProcessing() {
      this.h._waitUntilIdle();
    }
    closeGraph() {
      this.h._closeGraph(), this.h.simpleListeners = void 0, this.h.emptyPacketListeners = void 0;
    }
  }, class extends kr {
    V() {
      this.h._registerModelResourcesGraphService();
    }
  });
  var kr;
  function Br(t2, e2) {
    return __async(this, null, function* () {
      const r2 = yield ((t3, e3, r3) => __async(this, null, function* () {
        var n2 = mn;
        if (t3 && (yield Ir(t3)), !self.ModuleFactory) throw Error("ModuleFactory not set.");
        if (e3 && (yield Ir(e3), !self.ModuleFactory)) throw Error("ModuleFactory not set.");
        return self.Module && r3 && ((t3 = self.Module).locateFile = r3.locateFile, r3.mainScriptUrlOrBlob && (t3.mainScriptUrlOrBlob = r3.mainScriptUrlOrBlob)), r3 = yield self.ModuleFactory(self.Module || r3), self.ModuleFactory = self.Module = void 0, new n2(r3, null);
      }))(t2.wasmLoaderPath, t2.assetLoaderPath, { locateFile: (e3) => e3.endsWith(".wasm") ? t2.wasmBinaryPath.toString() : t2.assetBinaryPath && e3.endsWith(".data") ? t2.assetBinaryPath.toString() : e3 });
      return yield r2.J(e2), r2;
    });
  }
  function Nr(t2, e2) {
    return __async(this, null, function* () {
      return Br(t2, e2);
    });
  }
  function Dr(t2) {
    try {
      const e2 = t2.D.length;
      if (1 === e2) throw Error(t2.D[0].message);
      if (1 < e2) throw Error("Encountered multiple errors: " + t2.D.map((t3) => t3.message).join(", "));
    } finally {
      t2.D = [];
    }
  }
  function jr(t2, e2) {
    t2.B = Math.max(t2.B, e2);
  }
  var Fr = class {
    constructor(t2) {
      this.i = t2, this.D = [], this.B = 0, this.i.setAutoRenderToScreen(false);
    }
    setGraph(t2, e2) {
      this.i.attachErrorListener((t3, e3) => {
        this.D.push(Error(e3));
      }), this.i.V(), this.i.setGraph(t2, e2), Dr(this);
    }
    finishProcessing() {
      this.i.finishProcessing(), Dr(this);
    }
    close() {
      this.i.closeGraph();
    }
  };
  Fr.prototype.close = Fr.prototype.close;
  var Vr = class extends pe {
    constructor(t2) {
      super(t2);
    }
  };
  var Cr = [0, Qe, Ce, Ne, -1, Fe];
  function Mr(t2, e2) {
    ae(t2, 1, e2);
  }
  var Gr = class extends pe {
    constructor() {
      super();
    }
  };
  function Rr(t2, e2, r2, n2) {
    if (void 0 !== t2.data) {
      var i2 = new Uint8Array(t2.data.buffer, e2, r2);
      return 1 === n2 && function(t3, e3, r3) {
        t3.i.push([e3, r3]), t3.i.sort((t4, e4) => t4[0] - e4[0]), e3 = 0;
        for (const [n3, i3] of t3.i) {
          const t4 = i3;
          (r3 = n3) <= e3 && (e3 = Math.max(e3, r3 + t4));
        }
        e3 === t3.length && (t3.data = void 0);
      }(t2, e2, r2), i2;
    }
  }
  Gr.A = [4];
  var zr = class {
    constructor(t2) {
      this.i = [], this.data = t2, this.length = t2.length;
    }
  };
  var Wr = class {
    constructor(t2, e2, r2) {
      this.i = t2, this.j = e2, this.l = r2;
    }
    get size() {
      let t2 = 0;
      for (let e2 = 0; e2 < this.i.length; e2++) t2 += this.i[e2].length;
      return t2;
    }
  };
  function $r(t2) {
    if (t2.i) try {
      t2.h._free(t2.j);
    } catch (e2) {
    } finally {
      t2.i = false;
    }
  }
  var Hr = class {
    constructor(t2, e2) {
      this.h = t2, this.l = e2, this.j = this.h._malloc(e2) >>> 0, this.o = this.h.HEAPU8, this.i = !!this.j;
    }
    get offset() {
      if (!this.i) throw Error("WasmFileReference has been freed.");
      return this.j;
    }
    get size() {
      if (!this.i) throw Error("WasmFileReference has been freed.");
      return this.l;
    }
    set(t2, e2) {
      this.o.set(t2, this.j + (e2 != null ? e2 : 0));
    }
  };
  var qr = class extends pe {
    constructor() {
      super();
    }
  };
  qr.A = [4], qr.prototype.i = Ze([0, We, 2, ze, Ce]);
  var Kr = class extends pe {
    constructor() {
      super();
    }
  };
  var Yr = [0, Re, -5];
  var Jr = [0, We, je, -1, Qe];
  var Xr = class extends pe {
    constructor() {
      super();
    }
  };
  var Qr = [0, Ce, -6, 1, Ce, 1, [0, Re, Qe, -2], [0, Re, Ne], Qe, -2, [0, Re, -1, Qe, Ne, Je], 1, Re];
  var Zr = class extends pe {
    constructor() {
      super();
    }
  };
  Zr.A = [5, 7];
  var tn = [0, [4, 6], Qr, Ce, 1, Me, ze, $e, Xe];
  var en = [0, Be, Jr, tn, Ce];
  var rn = [0, Ce, Re, -1];
  var nn = class extends pe {
    constructor() {
      super();
    }
  };
  nn.A = [29], nn.prototype.i = Ze([0, We, 8, Yr, 1, Ce, 1, Ce, en, rn, 1, Qe, We, tn, en, Ce, 5, Qe, Ve, 1, Cr]);
  var on = class extends pe {
    constructor() {
      super();
    }
  };
  var sn = class extends pe {
    constructor() {
      super();
    }
  };
  var an = [2, 4];
  sn.prototype.i = Ze([0, an, Ce, $e, Ce, Ye, [0, 1, We]]);
  var un = /* @__PURE__ */ function(t2) {
    return class e2 extends t2 {
      static W(t3, r2) {
        return __async(this, null, function* () {
          var _a;
          let n2;
          r2 || (r2 = yield e2.M());
          const i2 = [];
          for (const e3 of (_a = t3 == null ? void 0 : t3.requiredFeatures) != null ? _a : []) r2.features.has(e3) ? i2.push(e3) : console.warn(`WebGPU feature ${e3} is not supported.`);
          t3 = __spreadProps(__spreadValues({}, t3), { requiredFeatures: i2 });
          try {
            n2 = yield r2.requestDevice(t3);
          } catch (t4) {
            throw console.error("Unable to initialize WebGPU with the requested features."), t4;
          }
          return r2 = yield r2.requestAdapterInfo(), n2.adapterInfo = r2, n2;
        });
      }
      static M(t3) {
        return __async(this, null, function* () {
          if (!(t3 = yield navigator.gpu.requestAdapter(t3))) throw Error("Unable to request adapter from navigator.gpu; Ensure WebGPU is enabled.");
          return t3;
        });
      }
      T(t3) {
        if (e3) "undefined" != typeof HTMLCanvasElement && e3 instanceof HTMLCanvasElement && (e3.id = "canvas_webgpu");
        else var e3 = new OffscreenCanvas(1, 1);
        e3.getContext("webgpu").configure({ device: t3, format: navigator.gpu.getPreferredCanvasFormat() }), this.h.preinitializedWebGPUDevice = t3;
      }
      P() {
        return this.h.ccall("closeGraph", "void", [], [], { async: true });
      }
    };
  }(/* @__PURE__ */ function(t2) {
    return class extends t2 {
      addStreamingReaderToInputSidePacket(t3, e2) {
        this.h.addStreamingReaderToInputSidePacket((e3, r2, n2) => function(t4, e4, r3, n3, i2) {
          return __async(this, null, function* () {
            if (2 === i2) return t4.i = [], t4.j = () => Promise.resolve(void 0), t4.l(), Promise.resolve(0);
            for (; t4.size < r3 + n3; ) {
              var o2 = yield t4.j();
              if (void 0 === o2) break;
              t4.i.push(new zr(o2));
            }
            if (t4.size < r3 + n3) throw Error(`Data size is too small: ${t4.size}, expected at least ${r3 + n3}.`);
            o2 = e4._malloc(n3) >>> 0;
            let s2 = 0;
            for (let a2 = 0; a2 < t4.i.length; a2++) {
              const u2 = t4.i[a2];
              if (r3 >= u2.length) {
                r3 -= u2.length;
                continue;
              }
              const c2 = Math.min(n3, u2.length - r3);
              if (void 0 === (r3 = Rr(u2, r3, c2, i2))) throw Error("Data has already been released.");
              if (e4.HEAPU8.set(r3, o2 + s2), r3 = 0, s2 += c2, 0 == (n3 -= c2)) break;
            }
            if (0 !== n3) throw Error("Data not found.");
            return Promise.resolve(o2);
          });
        }(t3, this.h, e3, r2, n2), e2);
      }
    };
  }(/* @__PURE__ */ function(t2) {
    return class extends t2 {
      O(t3, e2) {
        Pr(this, "lora_model_ref_in", (r2) => {
          this.h._addRawDataSpanToInputStream(t3.offset, t3.size, r2, e2);
        });
      }
    };
  }(class extends xr {
  })));
  var cn = class extends un {
  };
  var ln = class {
    constructor(t2) {
      this.j = t2, this.i = hn, hn++;
    }
  };
  var hn = 0;
  var fn = class {
    constructor() {
      let t2, e2;
      this.promise = new Promise((r2, n2) => {
        t2 = r2, e2 = n2;
      }), this.i = t2, this.j = e2;
    }
  };
  function dn() {
    return __async(this, null, function* () {
      const t2 = yield cn.M({ powerPreference: "high-performance" });
      var e2 = t2.limits.maxBufferSize;
      if (524550144 > t2.limits.maxStorageBufferBindingSize) throw Error(`The WebGPU device is unable to execute LLM tasks, because the required maxStorageBufferBindingSize is at least 524550144 but your device only supports maxStorageBufferBindingSize of ${e2}`);
      if (786825216 <= e2) e2 = 786825216;
      else {
        if (!(524550144 <= e2)) throw Error(`The WebGPU device is unable to execute LLM tasks, because the required maxBufferSize is at least 524550144 but your device only supports maxBufferSize of ${e2}`);
        e2 = 524550144;
      }
      return cn.W({ requiredFeatures: ["shader-f16"], requiredLimits: { maxStorageBufferBindingSize: 524550144, maxBufferSize: e2 } }, t2);
    });
  }
  function pn(t2) {
    var _a;
    const e2 = function(t3) {
      var _a2, _b;
      const e3 = new vr();
      de(e3, 10, "text_in"), de(e3, 10, "token_cost_in"), de(e3, 10, "lora_model_id_to_apply_in"), de(e3, 10, "lora_model_ref_in"), de(e3, 10, "lora_model_id_to_load_in"), de(e3, 16, "streaming_reader"), de(e3, 15, "text_out"), de(e3, 15, "text_end"), de(e3, 15, "token_cost_out");
      var r3 = new hr();
      fe(r3, 2, "TokenizerInputBuildCalculator"), de(r3, 3, "PROMPT:text_in"), de(r3, 3, "LORA_ID:lora_model_id_to_apply_in"), de(r3, 4, "prompt"), _r(e3, r3), fe(r3 = new hr(), 2, "ModelDataCalculator"), de(r3, 6, "MODEL_DATA:__side_packet_1"), de(r3, 6, "MODEL_TYPE:model_type"), de(r3, 5, "READ_DATA_FN:streaming_reader"), de(r3, 3, "LORA_MODEL_SPAN:lora_model_ref_in"), de(r3, 3, "LORA_MODEL_ID:lora_model_id_to_load_in"), de(r3, 4, "LORA_DATA:lora_model_data"), _r(e3, r3), fe(r3 = new hr(), 2, "Gpt2UnicodeMappingCalculator"), de(r3, 5, "MODEL_TYPE:model_type"), de(r3, 6, "BYTES_TO_UNICODE_MAPPING:tokenizer_mapping"), _r(e3, r3), fe(r3 = new er(), 1, "type.googleapis.com/odml.infra.proto.TokenizerCalculatorOptions");
      var n2 = new sn(), i2 = (_a2 = Dt(Jt(t3.l))) != null ? _a2 : 0;
      he(n2, 1, i2), fe(i2 = new on(), 2, "spm_vocab_model"), null == i2 && (i2 = void 0);
      var o2 = n2.m, s2 = ht(o2);
      At(s2);
      for (var a2 = s2, u2 = 0, c2 = 0; c2 < an.length; c2++) {
        var l2 = an[c2];
        null != Qt(o2, a2, l2) && (0 !== u2 && (a2 = te(o2, a2, u2)), u2 = l2);
      }
      if ((a2 = u2) && 4 !== a2 && null != i2 && (s2 = te(o2, s2, a2)), te(o2, s2, 4, i2), he(n2, 3, 2), tr(r3, n2.i()), fe(n2 = new hr(), 2, "TokenizerCalculator"), le(n2, 8, er, r3), de(n2, 5, "MODEL_DATA:__side_packet_1"), de(n2, 3, "PROMPT_AND_INPUT_OPTIONS:prompt"), de(n2, 5, "BYTES_TO_UNICODE_MAPPING:tokenizer_mapping"), de(n2, 6, "PROCESSOR_GETTER:__input_side_1"), de(n2, 4, "IDS_AND_INPUT_OPTIONS:__stream_0"), _r(e3, n2), fe(r3 = new er(), 1, "type.googleapis.com/odml.infra.proto.LlmGpuCalculatorOptions"), he(n2 = new nn(), 12, 3), fe(n2, 1, "llm.tflite"), he(n2, 14, 0), he(n2, 22, 1), i2 = se(t3.l, Vr, 3), ae(n2, 31, i2), oe(i2 = new Kr(), 1, true, false), oe(i2, 2, true, false), oe(i2, 5, true, false), ae(n2, 10, i2), c2 = t3.l, i2 = c2.m, o2 = ht(i2), s2 = 2 & o2 ? 1 : 2, a2 = ee(i2, o2, 4), u2 = lt(a2), Yt(c2, u2, void 0, false)) {
        for ((4 & u2 || Object.isFrozen(a2)) && (a2 = rt(a2), u2 = ue(u2, o2), o2 = te(i2, o2, 4, a2)), l2 = c2 = 0; c2 < a2.length; c2++) {
          const t4 = Bt(a2[c2]);
          null != t4 && (a2[l2++] = t4);
        }
        l2 < c2 && (a2.length = l2), u2 = ct(u2 = re(u2, o2), 20, true), u2 = ct(u2, 4096, false), u2 = ct(u2, 8192, false), ft(a2, u2), 2 & u2 && Object.freeze(a2);
      }
      return ne(u2) || (c2 = u2, (u2 = (l2 = 1 === s2 || 4 === s2 && !!(32 & u2)) ? ct(u2, 2, true) : ce(u2, o2, false)) !== c2 && ft(a2, u2), l2 && Object.freeze(a2)), 2 === s2 && ne(u2) && (a2 = rt(a2), u2 = ce(u2 = ue(u2, o2), o2, false), ft(a2, u2), te(i2, o2, 4, a2)), ie(n2, 29, a2), i2 = new Zr(), he(o2 = new Xr(), 1, 1), t3 = (_b = Dt(Jt(t3.l))) != null ? _b : 0, he(o2, 2, t3), ae(i2, 1, o2), ae(n2, 20, i2), tr(r3, n2.i()), fe(t3 = new hr(), 2, "LlmGpuCalculator"), le(t3, 8, er, r3), de(t3, 3, "IDS_AND_INPUT_OPTIONS:__stream_0"), de(t3, 3, "FINISH:finish"), de(t3, 3, "LORA_DATA:lora_model_data"), de(t3, 5, "MODEL_DATA:__side_packet_1"), de(t3, 4, "DECODED_IDS:__stream_3"), de(t3, 4, "OUTPUT_END:__stream_4"), fe(r3 = new or(), 1, "FINISH"), oe(r3, 2, true, false), le(t3, 13, or, r3), _r(e3, t3), fe(t3 = new hr(), 2, "IsPacketPresentCalculator"), de(t3, 3, "__stream_4"), de(t3, 4, "text_end"), _r(e3, t3), fe(t3 = new er(), 1, "type.googleapis.com/odml.infra.proto.DetokenizerCalculatorOptions"), he(r3 = new qr(), 5, 1), de(r3, 4, "<eos>"), de(r3, 4, "<|endoftext|>"), tr(t3, r3.i()), fe(r3 = new hr(), 2, "DetokenizerCalculator"), le(r3, 8, er, t3), de(r3, 3, "IDS_AND_INPUT_OPTIONS:__stream_3"), de(r3, 5, "PROCESSOR_GETTER:__input_side_1"), de(r3, 5, "BYTES_TO_UNICODE_MAPPING:tokenizer_mapping"), de(r3, 5, "MODEL_DATA:__side_packet_1"), de(r3, 4, "FINISH_AND_INPUT_OPTIONS:finish"), de(r3, 4, "WORDS:text_out"), _r(e3, r3), fe(t3 = new hr(), 2, "TokenCostCalculator"), de(t3, 3, "PROMPT:token_cost_in"), de(t3, 5, "PROCESSOR_GETTER:__input_side_1"), de(t3, 5, "BYTES_TO_UNICODE_MAPPING:tokenizer_mapping"), de(t3, 4, "NUM_TOKENS:token_cost_out"), _r(e3, t3), e3;
    }(t2);
    t2.i.attachStringVectorListener("text_out", (e3, r3) => {
      var n2 = 0 === t2.G.length;
      null == e3 || 0 === e3.length ? n2 = "" : (e3 = (e3 = (e3 = e3[0]).replaceAll("\u2581", " ")).replaceAll("<0x0A>", "\n"), n2 && (e3 = e3.trimStart()), n2 = e3.split("\\[eod\\]", 1)[0]), t2.G.push(n2), t2.I && 0 === t2.C.length && t2.I(n2, false), jr(t2, r3);
    }), t2.i.attachEmptyPacketListener("text_out", (e3) => {
      jr(t2, e3);
    }), t2.i.attachBoolListener("text_end", (e3, r3) => {
      t2.j = false, jr(t2, r3), gn(t2), t2.o && (t2.o.i(t2.G.join("")), t2.o = void 0), t2.I && t2.I("", true);
    }), t2.i.attachEmptyPacketListener("text_end", (e3) => {
      t2.j = false, jr(t2, e3), gn(t2), t2.o && (t2.o.i(t2.G.join("")), t2.o = void 0);
    }), t2.i.attachIntListener("token_cost_out", (e3, r3) => {
      t2.L = e3, jr(t2, r3);
    }), t2.H && t2.i.addStreamingReaderToInputSidePacket(t2.H, "streaming_reader");
    const r2 = e2.i();
    return (_a = t2.u) == null ? void 0 : _a.removeEventListener("uncapturederror", t2.F), t2.i.P().then(() => {
      var _a2;
      (_a2 = t2.u) == null ? void 0 : _a2.addEventListener("uncapturederror", t2.F), t2.C.length = 0, t2.setGraph(new Uint8Array(r2), true), t2.finishProcessing();
    });
  }
  function gn(t2) {
    if (0 < t2.C.length) {
      const e2 = [...t2.C];
      if (t2.C.length = 0, !t2.o) throw e2;
      t2.o.j(e2), t2.o = void 0;
    }
  }
  var mn = class extends Fr {
    constructor(t2, e2) {
      if (super(new cn(t2, e2)), this.G = [], this.j = false, this.C = [], this.F = (t3) => {
        const e3 = (t3 = t3.error).message.match(/exceeds the max buffer size limit \(([0-9]+)\)\./);
        e3 && 524550144 < Number(e3[1]) ? t3 = Error(`Failed to run this LLM model, but you could try a smaller LLM model. WebGPU throws: "${t3.message}"`) : t3.message.match(/is larger than the maximum binding size/) && (t3 = Error(`Failed to run LLM inference, the supported max binding size is smaller than the required size. WebGPU throws: "${t3.message}"`)), this.C.push(t3);
      }, this.l = new Gr(), Mr(this.l, new yr()), this.s = new Vr(), ae(this.l, 3, this.s), Zt(this.l, 2, Nt(512)), t2 = this.s, !Number.isFinite(2)) throw Pt("enum");
      oe(t2, 1, 2, 0), he(this.s, 2, 1), oe(this.s, 3, Ot(1), 0), oe(this.s, 4, Ot(1), 0);
    }
    J(t2) {
      var _a, _b, _c, _d, _e2, _f, _g, _h;
      if (this.j) throw Error("Cannot set options while loading or processing.");
      let e2;
      this.j = true, ((_b = (_a = t2.baseOptions) == null ? void 0 : _a.gpuOptions) == null ? void 0 : _b.device) && (this.u && this.u.removeEventListener("uncapturederror", this.F), this.u = t2.baseOptions.gpuOptions.device, this.i.T(this.u), this.u.addEventListener("uncapturederror", this.F)), "maxTokens" in t2 && Zt(this.l, 2, Nt((_c = t2.maxTokens) != null ? _c : 512)), "topK" in t2 && (he(this.s, 2, (_d = t2.topK) != null ? _d : 1), t2.topK && !t2.randomSeed && console.warn("'topK' option ignored; it requires randomSeed to be set.")), "temperature" in t2 && (oe(this.s, 4, Ot((_e2 = t2.temperature) != null ? _e2 : 1), 0), t2.temperature && !t2.randomSeed && console.warn("'temperature' option ignored; it requires randomSeed to be set.")), t2.randomSeed && Zt(this.s, 5, kt(t2.randomSeed)), "loraRanks" in t2 && function(t3, e3) {
        ie(t3, 4, e3);
      }(this.l, (_f = t2.loraRanks) != null ? _f : []);
      const r2 = new Promise((t3) => {
        e2 = t3;
      });
      if (((_g = t2.baseOptions) == null ? void 0 : _g.modelAssetPath) || ((_h = t2.baseOptions) == null ? void 0 : _h.modelAssetBuffer)) {
        if (t2.baseOptions.modelAssetPath && t2.baseOptions.modelAssetBuffer) throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");
        let r3 = false;
        t2.baseOptions.modelAssetPath ? this.H = function(t3, e3) {
          const r4 = fetch(t3.toString()).then((t4) => {
            var _a2;
            return (_a2 = t4 == null ? void 0 : t4.body) == null ? void 0 : _a2.getReader();
          });
          return new Wr([], () => __async(this, null, function* () {
            let e4;
            try {
              e4 = yield r4;
            } catch (e5) {
              throw Error(`Error loading model from "${t3.toString()}": ${e5}`);
            }
            const { value: n2, done: i2 } = yield e4.read();
            if (!i2) return n2;
          }), e3);
        }(t2.baseOptions.modelAssetPath, e2) : t2.baseOptions.modelAssetBuffer instanceof Uint8Array ? (this.H = function(t3, e3) {
          return new Wr([new zr(t3)], () => Promise.resolve(void 0), e3);
        }(t2.baseOptions.modelAssetBuffer, e2), r3 = true) : t2.baseOptions.modelAssetBuffer ? (this.H = function(t3, e3) {
          return new Wr([], () => __async(this, null, function* () {
            const { value: e4, done: r4 } = yield t3.read();
            if (!r4) return e4;
          }), e3);
        }(t2.baseOptions.modelAssetBuffer, e2), r3 = true) : e2(), r3 && (t2.baseOptions.modelAssetBuffer = void 0);
      }
      return t2 = pn(this).then(() => {
      }), Promise.all([r2, t2]).then(() => {
        this.j = false, gn(this);
      });
    }
    get baseOptions() {
      return se(this.l, yr, 1);
    }
    set baseOptions(t2) {
      Mr(this.l, t2);
    }
    S(t2, e2, r2) {
      if (this.j) throw Error("Previous invocation or loading is still ongoing.");
      if (this.I = "function" == typeof e2 ? e2 : r2, this.G.length = 0, this.j = true, r2 = this.B + 1, this.i.addStringToStream(t2, "text_in", r2), e2 instanceof ln) {
        if (e2.j !== this) throw this.j = false, Error("The LoRA model was not loaded by this LLM Inference task.");
        this.i.addUintToStream(e2.i, "lora_model_id_to_apply_in", r2);
      } else this.i.addEmptyPacketToStream("lora_model_id_to_apply_in", r2);
      return this.finishProcessing(), this.o = new fn(), this.o.promise;
    }
    X(t2) {
      if (this.j) throw Error("Previous invocation or loading is still ongoing.");
      return this.j = true, this.L = void 0, this.i.addStringToStream(t2, "token_cost_in", this.B + 1), this.finishProcessing(), this.j = false, this.L;
    }
    U(t2) {
      return __async(this, null, function* () {
        if (this.j) throw Error("Cannot load LoRA model while loading or processing.");
        if (this.j = true, t2 instanceof Uint8Array) {
          var e2 = new Hr(this.i.h, t2.length);
          e2.set(t2), t2 = e2;
        } else t2 = yield function(t3, e3) {
          return __async(this, null, function* () {
            var _a;
            var r2 = yield fetch(e3.toString());
            e3 = Number(r2.headers.get("content-length")), t3 = new Hr(t3, e3);
            let n2 = 0;
            for (r2 = (_a = r2 == null ? void 0 : r2.body) == null ? void 0 : _a.getReader(); ; ) {
              const { value: e4, done: i2 } = yield r2.read();
              if (i2) break;
              t3.set(e4, n2), n2 += e4.byteLength;
            }
            if (e3 !== n2) throw $r(t3), Error(`File could not be fully loaded to memory, so was not retained. Loaded ${n2}/${e3} bytes before failure`);
            return t3;
          });
        }(this.i.h, t2);
        return e2 = new ln(this), this.i.O(t2, this.B + 1), this.i.addUintToStream(e2.i, "lora_model_id_to_load_in", this.B + 1), this.finishProcessing(), $r(t2), this.j = false, e2;
      });
    }
    close() {
      var _a;
      (_a = this.u) == null ? void 0 : _a.removeEventListener("uncapturederror", this.F), super.close();
    }
  };
  mn.prototype.loadLoraModel = mn.prototype.U, mn.prototype.sizeInTokens = mn.prototype.X, mn.prototype.generateResponse = mn.prototype.S, mn.prototype.setOptions = mn.prototype.J, mn.createWebGpuDevice = dn, mn.createFromModelPath = function(t2, e2) {
    return __async(this, null, function* () {
      return Nr(t2, e2 = { baseOptions: { gpuOptions: { device: yield dn() }, modelAssetPath: e2 } });
    });
  }, mn.createFromModelBuffer = function(t2, e2) {
    return __async(this, null, function* () {
      return Nr(t2, e2 = { baseOptions: { gpuOptions: { device: yield dn() }, modelAssetBuffer: e2 } });
    });
  }, mn.createFromOptions = function(t2, e2) {
    return __async(this, null, function* () {
      var _a, _b, _c, _d, _e2;
      if (!((_b = (_a = e2.baseOptions) == null ? void 0 : _a.gpuOptions) == null ? void 0 : _b.device)) {
        const t3 = yield dn();
        e2.baseOptions = (_c = e2.baseOptions) != null ? _c : {}, e2.baseOptions.gpuOptions = (_e2 = (_d = e2 == null ? void 0 : e2.baseOptions) == null ? void 0 : _d.gpuOptions) != null ? _e2 : {}, e2.baseOptions.gpuOptions.device = t3;
      }
      return Nr(t2, e2);
    });
  };

  // src/polyfill/session.ts
  var import_debug = __toESM(require_src());
  var debug = (0, import_debug.default)("chromeai:polyfill");
  var PolyfillChromeAIAssistant = class {
    constructor(llm) {
      this.llm = llm;
      this.prompt = (prompt) => __async(this, null, function* () {
        const response = yield this.llm.generateResponse(prompt);
        debug("prompt", prompt, response);
        return response;
      });
      this.promptStreaming = (prompt) => {
        debug("promptStreaming", prompt);
        const stream = new ReadableStream({
          start: (controller) => {
            const listener = (partialResult, done) => {
              controller.enqueue(partialResult);
              if (done) {
                controller.close();
              }
            };
            this.llm.generateResponse(prompt, listener);
          },
          cancel: (reason) => {
            console.warn("stream text canceled", reason);
          }
        });
        debug("promptStreaming", prompt);
        return stream;
      };
      this.destroy = () => __async(this, null, function* () {
        return this.llm.close();
      });
      debug("PolyfillChromeAIAssistant created", llm);
    }
  };
  var PolyfillChromeAIAssistantFactory = class {
    constructor(aiOptions = {}) {
      this.aiOptions = {
        wasmBinaryPath: "https://pub-ddcfe353995744e89b8002f16bf98575.r2.dev/genai_wasm_internal.wasm",
        wasmLoaderPath: "https://pub-ddcfe353995744e89b8002f16bf98575.r2.dev/genai_wasm_internal.js",
        // About 1.78GB, should cache by browser
        modelAssetPath: "https://pub-ddcfe353995744e89b8002f16bf98575.r2.dev/gemini-nano-it-chrome-128.bin"
      };
      this.capabilities = () => __async(this, null, function* () {
        const defaultOptions = {
          defaultTemperature: 0.8,
          defaultTopK: 3,
          maxTopK: 128
        };
        if (typeof WebAssembly.instantiate !== "function")
          return __spreadProps(__spreadValues({}, defaultOptions), {
            available: "no" /* NO */
          });
        if (!navigator.gpu)
          return __spreadProps(__spreadValues({}, defaultOptions), {
            available: "no" /* NO */
          });
        const isModelAssetBufferReady = yield Promise.race([
          this.modelAssetBuffer,
          Promise.resolve("sentinel")
        ]).then((value) => value === "sentinel").catch(() => true);
        return __spreadProps(__spreadValues({}, defaultOptions), {
          available: isModelAssetBufferReady ? "readily" /* READILY */ : "after-download" /* AFTER_DOWNLOAD */
        });
      });
      this.create = (options) => __async(this, null, function* () {
        const defaultParams = yield this.capabilities();
        const argv = Object.assign(
          {
            temperature: defaultParams.defaultTemperature,
            topK: defaultParams.defaultTopK
          },
          options
        );
        const llm = yield mn.createFromOptions(
          {
            wasmLoaderPath: this.aiOptions.wasmLoaderPath,
            wasmBinaryPath: this.aiOptions.wasmBinaryPath
          },
          {
            baseOptions: {
              modelAssetBuffer: yield this.modelAssetBuffer
            },
            temperature: argv.temperature,
            topK: argv.topK
          }
        );
        const session = new PolyfillChromeAIAssistant(llm);
        debug("createSession", options, session);
        return session;
      });
      this.aiOptions = Object.assign(this.aiOptions, aiOptions);
      debug("PolyfillChromeAI created", this.aiOptions);
      this.modelAssetBuffer = fetch(this.aiOptions.modelAssetPath).then(
        (response) => response.body.getReader()
      );
    }
  };
  var polyfillChromeAI = (options) => {
    const ai = {
      assistant: new PolyfillChromeAIAssistantFactory(options)
    };
    globalThis.ai = globalThis.ai || ai;
    globalThis.model = globalThis.model || ai;
  };

  // src/polyfill/index.ts
  polyfillChromeAI(globalThis.__polyfill_ai_options__);
})();
//# sourceMappingURL=polyfill.global.js.map